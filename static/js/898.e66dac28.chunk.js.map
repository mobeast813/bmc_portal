{"version":3,"file":"static/js/898.e66dac28.chunk.js","mappings":"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","sources":["apis/maintenance/Maintenance.js","apis/monitoring/Monitoring.js","components/AppIframeModal.js","views/maintenance/InventoryCatalogDetailModal.js","views/maintenance/PowerAndFanContorlModal.js","views/monitoring/bmc_monitoring/MonitoringList.js","views/monitoring/bmc_monitoring/MonitoringMain.js","../node_modules/@coreui/react/src/components/tabs/CTab.tsx","../node_modules/@coreui/react/src/components/tabs/CTabContent.tsx","../node_modules/@coreui/react/src/components/tabs/CTabList.tsx","../node_modules/@coreui/react/src/utils/getTransitionDurationFromElement.ts","../node_modules/@coreui/react/src/components/tabs/CTabPanel.tsx","../node_modules/@coreui/react/src/components/tabs/CTabs.tsx"],"sourcesContent":["// import { Cookies } from \"react-cookie\";\nimport api, { apiHeader } from \"../Instance\";\n\n\n///BMC Inventory Catalog 리스트 조회\nexport const getBmcInventoryCatalogList = async (props) => {\n\tconst { userId, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/${userId}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"inventory\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_vendor\": \"intel\",\n\t\t// \t\t\t\"fan_status\": \"critical\",\n\t\t// \t\t\t\"firmware_version\": \"v1.0\",\n\t\t// \t\t\t\"memory_status\": \"normal\",\n\t\t// \t\t\t\"psu_status\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor1\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_vendor\": \"amd\",\n\t\t// \t\t\t\"fan_status\": \"warning\",\n\t\t// \t\t\t\"firmware_version\": \"v1.1\",\n\t\t// \t\t\t\"memory_status\": \"critical\",\n\t\t// \t\t\t\"psu_status\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor2\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_vendor\": \"arm\",\n\t\t// \t\t\t\"fan_status\": \"normal\",\n\t\t// \t\t\t\"firmware_version\": \"v1.2\",\n\t\t// \t\t\t\"memory_status\": \"warning\",\n\t\t// \t\t\t\"psu_status\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor3\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BMC Inventory Catalog 리스트 조회\nexport const getSearchedBmcInventoryCatalogList = async (props) => {\n\tconst { userId, vendor, boa, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/${userId}/${vendor}/${boa}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"inventory\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_vendor\": \"intel\",\n\t\t// \t\t\t\"fan_status\": \"critical\",\n\t\t// \t\t\t\"firmware_version\": \"v1.0\",\n\t\t// \t\t\t\"memory_status\": \"normal\",\n\t\t// \t\t\t\"psu_status\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor1\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_vendor\": \"amd\",\n\t\t// \t\t\t\"fan_status\": \"warning\",\n\t\t// \t\t\t\"firmware_version\": \"v1.1\",\n\t\t// \t\t\t\"memory_status\": \"critical\",\n\t\t// \t\t\t\"psu_status\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor2\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_vendor\": \"arm\",\n\t\t// \t\t\t\"fan_status\": \"normal\",\n\t\t// \t\t\t\"firmware_version\": \"v1.2\",\n\t\t// \t\t\t\"memory_status\": \"warning\",\n\t\t// \t\t\t\"psu_status\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor3\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BMC Inventory Catalog 상세 정보 조회\nexport const getBmcInventoryCatalogDetail = async (props) => {\n\tconst { bmcUUID } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/detail/${bmcUUID}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///Power Control set 적용\nexport const updatePowerControlSet = async (props) => {\n\tconst { powerOption, bmcUUID, bmcIp } = props\n\ttry {\n\t\t// 0 : Reset Server\n\t\t// 1 : Power Off Server – Immediate\n\t\t// 2 : Power Off Server – Orderly Shutdown\n\t\t// 3 : Power On Server\n\t\t// 4 : Power Cycle Server\n\t\tconst bodyParams = {\n\t\t\t\"power_option\": powerOption,\n\t\t\t\"bmc_UUID\": bmcUUID,\n\t\t\t\"bmc_ip\": bmcIp\n\t\t}\n\t\t// const response = await api.post(`/bmc/power/set`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams);\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///Power Control set 적용\nexport const updateFanControlSet = async (props) => {\n\tconst { fanOption, bmcUUID, bmcIp } = props\n\ttry {\n\t\t// 0 : Set Fan to Standard Speed\n\t\t// 1 : Set Fan to Full Speed\n\t\t// 2 : Set Fan to Optimal Speed\n\t\t// 3 : Set Fan to HeavyIO Speed\n\t\tconst bodyParams = {\n\t\t\t\"fan_option\": fanOption,\n\t\t\t\"bmc_UUID\": bmcUUID,\n\t\t\t\"bmc_ip\": bmcIp\n\t\t}\n\t\t// const response = await api.post(`/bmc/fan/set`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams);\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n","// import { Cookies } from \"react-cookie\";\nimport api, { apiHeader } from \"../Instance\";\n\n\n///통합모니터링 BMC서버 데이터 리스트 조회\nexport const getMonitorBmcServerList = async (props) => {\n\tconst { userId, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/monitoring/${userId}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\tconsole.log(response.data);\n\t\t// {\n\t\t//  \"pages\": 10,\n\t\t//  \"vendor\": [\"KTNF\", …],\n\t\t//  \"boa\": [\"BOA1\", …],\n\t\t//  \"power\": [\"UP\", \"DOWN\"],\n\t\t//  \"fan\": [\"Normal\", \"Warning\", \"Critical\"],\n\t\t// \t\"monitoring\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"uuid_1\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.1\",\n\t\t// \t\t\t\"bmc_name\": \"bmc_1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_temp\": \"warning\",\n\t\t// \t\t\t\"fan\": \"normal\",\n\t\t// \t\t\t\"mem_temp\": \"critical\",\n\t\t// \t\t\t\"power\": \"normal\",\n\t\t// \t\t\t\"psu\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"hpe\",\n\t\t// \t\t\t\"version\": \"v1.0\",\n\t\t// \t\t\t\"volt\": \"warning\"\n\t\t// \t\t}, {\n\t\t// \t\t\t\"bmc_UUID\": \"uuid_2\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.2\",\n\t\t// \t\t\t\"bmc_name\": \"bmc_2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_temp\": \"normal\",\n\t\t// \t\t\t\"fan\": \"warning\",\n\t\t// \t\t\t\"mem_temp\": \"warning\",\n\t\t// \t\t\t\"power\": \"critical\",\n\t\t// \t\t\t\"psu\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"dell\",\n\t\t// \t\t\t\"version\": \"v1.1\",\n\t\t// \t\t\t\"volt\": \"normal\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"uuid_3\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.3\",\n\t\t// \t\t\t\"bmc_name\": \"bmc_3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_temp\": \"critical\",\n\t\t// \t\t\t\"fan\": \"normal\",\n\t\t// \t\t\t\"mem_temp\": \"normal\",\n\t\t// \t\t\t\"power\": \"warning\",\n\t\t// \t\t\t\"psu\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"sm\",\n\t\t// \t\t\t\"version\": \"v1.2\",\n\t\t// \t\t\t\"volt\": \"critical\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///통합모니터링 BMC서버 데이터 리스트 검색 조회\nexport const getSearchedMonitorBmcServerList = async (props) => {\n\tconst { userId, vendor, boaName, power, fan, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/monitoring/${userId}/${vendor}/${boaName}/${power}/${fan}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t//  \"pages\": 10,\n\t\t// \t\"monitoring\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"uuid_1\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.1\",\n\t\t// \t\t\t\"bmc_name\": \"bmc_1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_temp\": \"warning\",\n\t\t// \t\t\t\"fan\": \"normal\",\n\t\t// \t\t\t\"mem_temp\": \"critical\",\n\t\t// \t\t\t\"power\": \"normal\",\n\t\t// \t\t\t\"psu\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"hpe\",\n\t\t// \t\t\t\"version\": \"v1.0\",\n\t\t// \t\t\t\"volt\": \"warning\"\n\t\t// \t\t}, {\n\t\t// \t\t\t\"bmc_UUID\": \"uuid_2\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.2\",\n\t\t// \t\t\t\"bmc_name\": \"bmc_2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_temp\": \"normal\",\n\t\t// \t\t\t\"fan\": \"warning\",\n\t\t// \t\t\t\"mem_temp\": \"warning\",\n\t\t// \t\t\t\"power\": \"critical\",\n\t\t// \t\t\t\"psu\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"dell\",\n\t\t// \t\t\t\"version\": \"v1.1\",\n\t\t// \t\t\t\"volt\": \"normal\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"uuid_3\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.3\",\n\t\t// \t\t\t\"bmc_name\": \"bmc_3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_temp\": \"critical\",\n\t\t// \t\t\t\"fan\": \"normal\",\n\t\t// \t\t\t\"mem_temp\": \"normal\",\n\t\t// \t\t\t\"power\": \"warning\",\n\t\t// \t\t\t\"psu\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"sm\",\n\t\t// \t\t\t\"version\": \"v1.2\",\n\t\t// \t\t\t\"volt\": \"critical\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///센서 이벤트 로그 리스트 조회\nexport const getMonitorSensorEventLog = async (props) => {\n\tconst { userId, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/sel/${userId}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"sel\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"description\": \"Lower Critical going low\",\n\t\t// \t\t\t\"log_date\": \"2024-08-01 12:00:00\",\n\t\t// \t\t\t\"log_id\": \"01\",\n\t\t// \t\t\t\"sensor_num\": \"0x01\",\n\t\t// \t\t\t\"sensor_type\": \"Temperature\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"sm\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"description\": \"Upper Non-Recoverable going high\",\n\t\t// \t\t\t\"log_date\": \"2024-08-02 13:00:00\",\n\t\t// \t\t\t\"log_id\": \"02\",\n\t\t// \t\t\t\"sensor_num\": \"0x02\",\n\t\t// \t\t\t\"sensor_type\": \"Voltage\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"hpe\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"description\": \"Lower Non-Critical going low\",\n\t\t// \t\t\t\"log_date\": \"2024-08-03 14:00:00\",\n\t\t// \t\t\t\"log_id\": \"03\",\n\t\t// \t\t\t\"sensor_num\": \"0x03\",\n\t\t// \t\t\t\"sensor_type\": \"Fan\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"dell\"\n\t\t// \t\t},]\n\t\t// }\n\t\tconsole.log(response.data)\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///센서 이벤트 로그 리스트 조회\nexport const getSearchedMonitorSensorEventLog = async (props) => {\n\tconst { userId, vendor, boaName, sensorType, startDate, endDate, page } = props\n\ttry {\n\n\t\tconsole.log(`/bmc/sel/${userId}/${vendor}/${boaName}/${sensorType}/${startDate}/${endDate}/${page}`)\n\t\tconst response = await api.get(`/bmc/sel/${userId}/${vendor}/${boaName}/${sensorType}/${startDate}/${endDate}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"sel\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"description\": \"Lower Critical going low\",\n\t\t// \t\t\t\"log_date\": \"2024-08-01 12:00:00\",\n\t\t// \t\t\t\"log_id\": \"01\",\n\t\t// \t\t\t\"sensor_num\": \"0x01\",\n\t\t// \t\t\t\"sensor_type\": \"Temperature\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"sm\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"description\": \"Upper Non-Recoverable going high\",\n\t\t// \t\t\t\"log_date\": \"2024-08-02 13:00:00\",\n\t\t// \t\t\t\"log_id\": \"02\",\n\t\t// \t\t\t\"sensor_num\": \"0x02\",\n\t\t// \t\t\t\"sensor_type\": \"Voltage\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"hpe\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_ip\": \"192.168.1.3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"description\": \"Lower Non-Critical going low\",\n\t\t// \t\t\t\"log_date\": \"2024-08-03 14:00:00\",\n\t\t// \t\t\t\"log_id\": \"03\",\n\t\t// \t\t\t\"sensor_num\": \"0x03\",\n\t\t// \t\t\t\"sensor_type\": \"Fan\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"dell\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};","import { CCol, CForm, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport ButtonSecondary from \"./buttons/ButtonSecondary\";\n\nconst AppIfameModal = (props) => {\n\tconst { url, visible, setVisible } = props\n\treturn (\n\t\t< CModal\n\t\t\tsize=\"xl\"\n\t\t\talignment=\"center\"\n\t\t\tvisible={visible}\n\t\t\tonClose={() => { setVisible(false) }}\n\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t<CModalHeader>\n\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">BMC서버 Console</CModalTitle>\n\t\t\t</CModalHeader>\n\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t<CForm>\n\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t<div className=\"embed-responsive embed-responsive-1by1\">\n\t\t\t\t\t\t\t{/* <iframe className=\"embed-responsive-item\" src={url} allowFullScreen></iframe> */}\n\t\t\t\t\t\t\t<iframe className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" allowFullScreen></iframe>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CRow>\n\t\t\t\t</CForm>\n\t\t\t</CModalBody>\n\t\t\t<CModalFooter>\n\t\t\t\t<div className=\"d-flex col-12 mx-auto\">\n\t\t\t\t\t<CCol className=\"me-2 col-12\">\n\t\t\t\t\t\t<ButtonSecondary text=\"취소\" onClick={() => { setVisible(false) }} />\n\t\t\t\t\t</CCol>\n\t\t\t\t</div>\n\t\t\t</CModalFooter>\n\t\t</CModal >\n\n\n\t)\n}\n\nexport default AppIfameModal;","import { CCol, CForm, CFormInput, CFormLabel, CModal, CModalBody, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport TitleContentTemplate from \"../../components/text/TitleContentTemplate\";\nimport { getBmcInventoryCatalogDetail } from \"../../apis/maintenance/Maintenance\";\nimport { useDispatch } from \"react-redux\";\n\nconst InventoryCatalogDetailModal = (props) => {\n\tconst { bmcUUID, visible, setVisible } = props;\n\tconst dispatch = useDispatch();\n\tconst [data, setData] = useState();\n\n\tuseEffect(() => {\n\t\tif (visible) {\n\t\t\t// todo : bmcUUID로 검색했을떄 정상적인 데이터가 나오지 않음 추후 교체\n\t\t\t// getBmcInventoryCatalogDetail({ bmcUUID: bmcUUID })\n\t\t\tgetBmcInventoryCatalogDetail({ bmcUUID: \"UUID_1\" })\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\tif (response.inventory_detail.length === 0) {\n\t\t\t\t\t\tsetVisible(false)\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"상세 데이터가 없습니다.\" } });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetData(response.inventory_detail[0])\n\t\t\t\t\t}\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"InventoryCatalogDetail Error\", msg: \"InventoryCatalogDetail에 문제가 있습니다. 확인해주세요\" } });\n\t\t\t\t});\n\t\t}\n\t}, [visible])\n\n\treturn (\n\t\tdata ?\n\t\t\t< CModal\n\t\t\t\tsize=\"xl\"\n\t\t\t\talignment=\"center\"\n\t\t\t\tvisible={visible}\n\t\t\t\tonClose={() => { setVisible(false) }}\n\t\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t\t<CModalHeader>\n\t\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">BMC Inventory Catalog Detail</CModalTitle>\n\t\t\t\t</CModalHeader>\n\t\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t\t<CForm>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"System ID\" value={bmcUUID} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Serial Number\" value={data.serial_num} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Firmware Version\" value={data.firmware_version} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Model\" value={data.model} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BIOS Version\" value={data.bios_version} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BMC MAC Address\" value={data.mac_address} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BIOS Build Time\" value={data.bios_build_time} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Power State\" value={data.power_status} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CForm>\n\t\t\t\t</CModalBody>\n\n\t\t\t</CModal > : <></>\n\t)\n}\n\n\nexport default InventoryCatalogDetailModal;","import { CCardText, CCardTitle, CCol, CForm, CFormCheck, CFormLabel, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow, CTab, CTabContent, CTabList, CTabPanel, CTabs } from \"@coreui/react\";\nimport ButtonPrimary from \"../../components/buttons/ButtonPrimary\";\nimport { useEffect, useState } from \"react\";\nimport { updateFanControlSet, updatePowerControlSet } from \"../../apis/maintenance/Maintenance\";\nimport { useDispatch } from \"react-redux\";\nimport ButtonSecondary from \"../../components/buttons/ButtonSecondary\";\n\nconst PowerAndFanContorlModal = (props) => {\n\tconst { bmcUUID, bmcIp, powerValue, fanValue, visible, setVisible, initTab, callBack } = props;\n\n\tconst dispatch = useDispatch();\n\tconst [selectedItem, setSelectedItem] = useState(\"0\");\n\tconst [selectedTab, setSelectedTab] = useState(initTab ? initTab : \"power\");\n\n\tconst clearAndClose = () => {\n\t\tsetSelectedItem(0)\n\t\tsetVisible(false);\n\t}\n\n\tuseEffect(() => {\n\t\tonSelectTap(initTab)\n\t}, [initTab])\n\n\tconst onSelectTap = (tab) => {\n\t\tsetSelectedTab(tab)\n\t\tsetSelectedItem(\"0\")\n\t}\n\n\tconst powerControlRadioButtonList = [\n\t\t{ id: \"0\", label: \"Reset Server\" },\n\t\t{ id: \"1\", label: \"Power Off Server - Immediate\" },\n\t\t{ id: \"2\", label: \"Power Off Server – Orderly Shutdown\" },\n\t\t{ id: \"3\", label: \"Power On Server\" },\n\t\t{ id: \"4\", label: \"Power Cycle Server\" }\n\t]\n\n\tconst fanControlRadioButtonList = [\n\t\t{ id: \"0\", label: \"Set Fan to Standard Speed\" },\n\t\t{ id: \"1\", label: \"Set Fan to Full Speed\" },\n\t\t{ id: \"2\", label: \"Set Fan to Optimal Speed\" },\n\t\t{ id: \"3\", label: \"Set Fan to HeavyIO Speed\" }\n\t]\n\n\n\n\tconst onClickApply = () => {\n\t\tif (selectedItem) {\n\t\t\tif (selectedTab === \"power\") {\n\t\t\t\t//Power Control\n\t\t\t\tupdatePowerControlSet({ powerOption: selectedItem, bmcUUID: bmcUUID, bmcIp: bmcIp })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"전원설정 완료\", msg: \"전원설정을 완료하였습니다.\" } });\n\t\t\t\t\t\t\tcallBack()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"전원설정에 실패하였습니다.\" } });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclearAndClose()\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tconsole.log(error)\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 에러\", msg: \"전원설정에 문제가 있습니다.\\n다시 시도해보세요\" } });\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//Fan Control\n\t\t\t\tupdateFanControlSet({ fanOption: selectedItem, bmcUUID: bmcUUID, bmcIp: bmcIp })\n\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"전원설정 완료\", msg: \"전원설정을 완료하였습니다.\" } });\n\t\t\t\t\t\t\tcallBack()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"전원설정에 실패하였습니다.\" } });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclearAndClose()\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tconsole.log(error)\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 에러\", msg: \"전원설정에 문제가 있습니다.\\n다시 시도해보세요\" } });\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"설정 항목을 선택해주세요\" } });\n\t\t}\n\t}\n\treturn (\n\t\t< CModal\n\t\t\tsize=\"lg\"\n\t\t\talignment=\"center\"\n\t\t\tvisible={visible}\n\t\t\tonClose={() => { clearAndClose() }}\n\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t<CModalHeader>\n\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">Maintenance 관리</CModalTitle>\n\t\t\t</CModalHeader>\n\t\t\t<CModalBody className=\"text-center m-0\">\n\t\t\t\t<CTabs activeItemKey=\"power\" onChange={(e) => { onSelectTap(e) }}>\n\t\t\t\t\t<CTabList variant=\"tabs\">\n\t\t\t\t\t\t<CTab itemKey=\"power\">Power Control</CTab>\n\t\t\t\t\t\t<CTab itemKey=\"fan\">FAN Control</CTab>\n\t\t\t\t\t</CTabList>\n\t\t\t\t\t<CTabContent>\n\t\t\t\t\t\t<CTabPanel className=\"p-3\" itemKey=\"power\">\n\t\t\t\t\t\t\t<CCardTitle className=\"text-start mb-3 mt-4 fw-bolder fst-italic\">Power Control</CCardTitle>\n\t\t\t\t\t\t\t<hr style={{ color: \"white\", height: 0.1 }} />\n\t\t\t\t\t\t\t<CCardTitle className=\"text-start ps-3 pb-5 pt-4 text-success\">Host is currently {powerValue}</CCardTitle>\n\t\t\t\t\t\t\t<CRow className=\"m-1 mb-5\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpowerControlRadioButtonList.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t<CFormCheck key={index} type=\"radio\" className=\"text-start mb-3\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"powerControl\"\n\t\t\t\t\t\t\t\t\t\t\tid={`powerControl${item.id}`}\n\t\t\t\t\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t\t\t\t\t\tchecked={item.id === selectedItem}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setSelectedItem(e.target.id.split('powerControl')[1])}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t</CTabPanel>\n\t\t\t\t\t\t<CTabPanel className=\"p-3\" itemKey=\"fan\">\n\t\t\t\t\t\t\t<CCardTitle className=\"text-start mb-3 mt-4 fw-bolder fst-italic\">FAN Control</CCardTitle>\n\t\t\t\t\t\t\t<hr style={{ color: \"white\", height: 0.1 }} />\n\t\t\t\t\t\t\t<CCardTitle className=\"text-start ps-3 pb-5 pt-4 text-success\">Current FAN Mode is {fanValue}</CCardTitle>\n\t\t\t\t\t\t\t<CRow className=\"m-1 mb-5\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfanControlRadioButtonList.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t<CFormCheck key={index} type=\"radio\" className=\"text-start mb-3\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"fanControl\"\n\t\t\t\t\t\t\t\t\t\t\tid={`fanControl${item.id}`}\n\t\t\t\t\t\t\t\t\t\t\tlabel={item.label}\n\t\t\t\t\t\t\t\t\t\t\tchecked={item.id === selectedItem}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setSelectedItem(e.target.id.split('fanControl')[1])}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t</CTabPanel>\n\n\t\t\t\t\t</CTabContent>\n\t\t\t\t</CTabs>\n\t\t\t</CModalBody>\n\t\t\t<CModalFooter>\n\t\t\t\t<div className=\"d-flex col-6 mx-auto\">\n\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t<ButtonPrimary text=\"적용\" onClick={() => onClickApply()} />\n\t\t\t\t\t</CCol>\n\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t<ButtonSecondary text=\"취소\" onClick={() => { clearAndClose() }} />\n\t\t\t\t\t</CCol>\n\t\t\t\t</div>\n\t\t\t</CModalFooter>\n\t\t</CModal >\n\t)\n\n\n}\n\nexport default PowerAndFanContorlModal;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tCTable,\n\tCTableBody,\n\tCTableDataCell,\n\tCTableHead,\n\tCTableHeaderCell,\n\tCTableRow,\n} from \"@coreui/react\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\nimport InventoryCatalogDetailModal from \"../../maintenance/InventoryCatalogDetailModal\";\nimport PowerAndFanContorlModal from \"../../maintenance/PowerAndFanContorlModal\";\nimport AppIfameModal from \"../../../components/AppIframeModal\";\n\nconst MonitoringList = ({ list, callback }) => {\n\tconst [items, setItems] = useState();\n\tconst [visible, setVisible] = useState(false);\n\tconst [selectedItem, setSelectedItem] = useState({});\n\tconst [selectedControlMenu, setSelectedControlMenu] = useState();\n\tconst [contorlModalVisible, setContorlModalVisible] = useState();\n\tconst [consoleModalVisible, setConsoleModalVisible] = useState();\n\n\n\tconst showDetailPopup = (bmcUUID) => {\n\t\tsetSelectedItem({ bmcUUID: bmcUUID })\n\t\tsetVisible(true);\n\t}\n\n\tconst showControlPopup = (selectedMenu, bmcUUID, bmcIp, powerValue, fanValue) => {\n\t\tsetSelectedItem({ bmcUUID: bmcUUID, bmcIp: bmcIp, powerValue: powerValue, fanValue: fanValue })\n\t\tsetSelectedControlMenu(selectedMenu)\n\t\tsetContorlModalVisible(true)\n\t}\n\n\tconst showConsolePopup = (bmcIp) => {\n\t\tsetSelectedItem({ bmcIp: bmcIp })\n\t\tsetConsoleModalVisible(true);\n\t}\n\n\tconst dataRefresh = async () => {\n\t\tconsole.log(\"dataRefresh\")\n\t\tcallback()\n\t}\n\n\tuseEffect(() => {\n\t\tif (list) {\n\t\t\tconst transformedData = list.map((item) => ({\n\t\t\t\tcheck: \"\",\n\t\t\t\tbmcUUID: item.bmc_UUID,\n\t\t\t\tbmcName: item.bmc_name,\n\t\t\t\tvendor: item.vendor,\n\t\t\t\tboaName: item.boa_name,\n\t\t\t\tbmcIp: item.bmc_ip,\n\t\t\t\tversion: item.version,\n\t\t\t\tpower: item.power,\n\t\t\t\tcpuTemp: item.cpu_temp,\n\t\t\t\tmemTemp: item.mem_temp,\n\t\t\t\tpsu: item.psu,\n\t\t\t\tvolt: item.volt,\n\t\t\t\tfan: item.fan,\n\t\t\t\t_cellProps: { class: { scope: \"row\" } },\n\t\t\t}));\n\t\t\tsetItems(transformedData);\n\t\t}\n\t}, [list]);\n\n\n\n\tconst columns = [\n\t\t{ key: \"bmc_UUID\", label: \"서버ID\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_name\", label: \"서버명\", _props: { scope: \"col\" } },\n\t\t{ key: \"boa_name\", label: \"그룹\", _props: { scope: \"col\" } },\n\t\t{ key: \"vendor\", label: \"벤더\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_ip\", label: \"IP\", _props: { scope: \"col\" } },\n\t\t{ key: \"version\", label: \"버전\", _props: { scope: \"col\" } },\n\t\t{ key: \"power\", label: \"전원\", _props: { scope: \"col\" } },\n\t\t{ key: \"cpu_temp\", label: \"CPU 온도\", _props: { scope: \"col\" } },\n\t\t{ key: \"mem_temp\", label: \"MEM 온도\", _props: { scope: \"col\" } },\n\t\t{ key: \"psu\", label: \"PSU\", _props: { scope: \"col\" } },\n\t\t{ key: \"volt\", label: \"Voltage\", _props: { scope: \"col\" } },\n\t\t{ key: \"fan\", label: \"FAN\", _props: { scope: \"col\" } },\n\t\t{ key: \"console\", label: \"Console\", _props: { scope: \"col\" } },\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<CTable align=\"middle\" responsive bordered={true} hover={true}>\n\t\t\t\t<CTableHead align=\"middle\" color=\"primary\">\n\t\t\t\t\t<CTableRow>\n\t\t\t\t\t\t{columns?.map((column, key) => (\n\t\t\t\t\t\t\t<CTableHeaderCell key={key}>\n\t\t\t\t\t\t\t\t&nbsp; {column.label}\n\t\t\t\t\t\t\t</CTableHeaderCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CTableRow>\n\t\t\t\t</CTableHead>\n\n\t\t\t\t<CTableBody align=\"middle\">\n\t\t\t\t\t{items?.map((item, key) => (\n\t\t\t\t\t\t<CTableRow key={key}>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<Link onClick={() => showDetailPopup(item.bmcUUID, item.bmcIp)}>\n\t\t\t\t\t\t\t\t\t{item.bmcUUID}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.boaName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.vendor}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcIp}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.version}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<Link onClick={() => {\n\t\t\t\t\t\t\t\t\tshowControlPopup(\"power\", item.bmcUUID, item.bmcIp, item.power, item.fan)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{item.power}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.cpuTemp}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.memTemp}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.psu}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.volt}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<Link onClick={() => {\n\t\t\t\t\t\t\t\t\tshowControlPopup(\"fan\", item.bmcUUID, item.bmcIp, item.power, item.fan)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t{item.fan}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<div className=\"me-2 ms-2 mt-1 mb-1\">\n\t\t\t\t\t\t\t\t\t<ButtonPrimary text=\"console\" onClick={() => { showConsolePopup(item.bmcIp) }} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t</CTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</CTableBody>\n\t\t\t</CTable>\n\t\t\t<InventoryCatalogDetailModal\n\t\t\t\tvisible={visible}\n\t\t\t\tsetVisible={setVisible}\n\t\t\t\tbmcUUID={selectedItem.bmcUUID}\n\t\t\t/>\n\t\t\t<PowerAndFanContorlModal\n\t\t\t\tbmcUUID={selectedItem.bmcUUID}\n\t\t\t\tbmcIp={selectedItem.bmcIp}\n\t\t\t\tpowerValue={selectedItem.powerValue}\n\t\t\t\tfanValue={selectedItem.fanValue}\n\t\t\t\tvisible={contorlModalVisible}\n\t\t\t\tsetVisible={setContorlModalVisible}\n\t\t\t\tinitTab={selectedControlMenu}\n\t\t\t\tcallBack={dataRefresh}\n\t\t\t/>\n\t\t\t<AppIfameModal\n\t\t\t\turl={`http://${selectedItem.bmcIp}`}\n\t\t\t\tvisible={consoleModalVisible}\n\t\t\t\tsetVisible={setConsoleModalVisible}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default MonitoringList;\n","import React, { useState, useEffect } from \"react\";\nimport { CCard, CCardBody, CCol, CRow, CCardTitle } from \"@coreui/react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useCookies } from \"react-cookie\";\nimport { SetSelectBoxOptions, SetSelectBoxPageOptions } from \"../../../utils/Utilities\";\nimport SelectBox from \"../../../components/selectBox/SelectBox\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\nimport { getMonitorBmcServerList, getSearchedMonitorBmcServerList } from \"../../../apis/monitoring/Monitoring\";\nimport MonitoringList from \"./MonitoringList\";\n\nconst MonitoringMain = () => {\n\tconst [cookies] = useCookies([\"userId\"]);\n\tvar userId = `${cookies.userId}`\n\n\n\t// 조회 관련 변수\n\t// const [selectedIds, setSelectedIds] = useState([]);\n\tconst [list, setList] = useState();\n\tconst [totalPage, setTotalPage] = useState();\n\n\t// 페이지네이션\n\tconst [selectBoxReload, setSelectBoxReload] = useState(false);\n\n\t// selectBox Options\n\tconst [vendorSelectBoxOption, setVendorSelectBoxOption] = useState([]);\n\tconst [boaGroupSelectBoxOption, setBoaGroupSelectBoxOption] = useState([]);\n\tconst [powerSelectBoxOption, setPowerSelectBoxOption] = useState([]);\n\tconst [fanSelectBoxOption, setFanSelectBoxOption] = useState([]);\n\tconst [selectedVendor, setSelectedVendor] = useState(0);\n\tconst [selectedBoaGroup, setSelectedBoaGroup] = useState(0);\n\tconst [selectedPower, setSelectedPower] = useState(0);\n\tconst [selectedFan, setSelectedFan] = useState(0);\n\n\tuseEffect(() => {\n\t\tinitList(1);\n\t}, []);\n\n\tconst initList = (page) => {\n\t\ttry {\n\t\t\treturn getMonitorBmcServerList({ userId: userId, page: page })\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetVendorSelectBoxOption(data.vendor)\n\t\t\t\t\tsetBoaGroupSelectBoxOption(data.boa_name)\n\t\t\t\t\tsetPowerSelectBoxOption(data.power)\n\t\t\t\t\tsetFanSelectBoxOption(data.fan)\n\t\t\t\t\tsetList(data.monitoring)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t}\n\n\t//모니터링 BMC서버 리스트 조회\n\tconst getList = ({ isRefresh, page }) => {\n\t\ttry {\n\t\t\treturn getMonitorBmcServerList({\n\t\t\t\tuserId: userId,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.monitoring)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t//모니터링 BMC서버 리스트 검색 조회\n\tconst getSearchedList = ({ isRefresh, page }) => {\n\t\ttry {\n\t\t\treturn getSearchedMonitorBmcServerList({\n\t\t\t\tuserId: userId,\n\t\t\t\tvendor: selectedVendor,\n\t\t\t\tboaName: selectedBoaGroup,\n\t\t\t\tpower: selectedPower,\n\t\t\t\tfan: selectedFan,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.monitoring)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t// 초기화\n\tconst reloadData = async () => {\n\t\ttry {\n\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\n\treturn (\n\t\t<>\n\t\t\t<CRow className=\"d-flex justify-content-center align-item-center\">\n\t\t\t\t<CCard className=\"d-flex mb-3\">\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t<CCardTitle style={{ fontWeight: \"bold\" }}>통합모니터링</CCardTitle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<CRow className=\"justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(vendorSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedVendor(value)} />\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(boaGroupSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedBoaGroup(value)} />\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(powerSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedPower(value)} />\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(fanSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedFan(value)} />\n\t\t\t\t\t\t\t<CCol>\n\t\t\t\t\t\t\t\t<ButtonPrimary\n\t\t\t\t\t\t\t\t\ttext=\"검색\"\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tif (selectedVendor === 0 && selectedBoaGroup === 0 && selectedPower === 0) {\n\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t<CCol className=\"d-flex justify-content-end\">\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\toptions={SetSelectBoxPageOptions(totalPage)}\n\t\t\t\t\t\t\t\t\t\treload={selectBoxReload}\n\t\t\t\t\t\t\t\t\t\tcallBack={(pageValue) => {\n\t\t\t\t\t\t\t\t\t\t\t// if ([selectedVendor, selectedBoaGroup, selectedBoaGroup, selectedPower].every((element) => element === 0)) {\n\t\t\t\t\t\t\t\t\t\t\tif (selectedVendor === 0 && selectedBoaGroup === 0 && selectedPower === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: false, page: pageValue });\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: false, page: pageValue })\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t\t<MonitoringList\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tcallback={reloadData}\n\t\t\t\t\t/>\n\t\t\t\t</CCard>\n\t\t\t</CRow>\n\t\t</>\n\t);\n};\n\nexport default MonitoringMain;\n","import React, { forwardRef, HTMLAttributes, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { TabsContext } from './CTabs'\n\nexport interface CTabProps extends HTMLAttributes<HTMLButtonElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Toggle the disabled state for the component.\n   */\n  disabled?: boolean\n  /**\n   * Item key.\n   */\n  itemKey: number | string\n}\n\nexport const CTab = forwardRef<HTMLButtonElement, CTabProps>(\n  ({ children, className, itemKey, ...rest }, ref) => {\n    const { _activeItemKey, setActiveItemKey, id } = useContext(TabsContext)\n\n    const isActive = () => itemKey === _activeItemKey\n\n    return (\n      <button\n        className={classNames(\n          'nav-link',\n          {\n            active: isActive(),\n          },\n          className,\n        )}\n        id={`${id}${itemKey}-tab`}\n        onClick={() => setActiveItemKey(itemKey)}\n        onFocus={() => setActiveItemKey(itemKey)}\n        role=\"tab\"\n        tabIndex={isActive() ? 0 : -1}\n        type=\"button\"\n        aria-controls={`${id}${itemKey}-tab-pane`}\n        aria-selected={isActive()}\n        ref={ref}\n        {...rest}\n      >\n        {children}\n      </button>\n    )\n  },\n)\n\nCTab.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n}\n\nCTab.displayName = 'CTab'\n","import React, { HTMLAttributes, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CTabContentProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n}\n\nexport const CTabContent = forwardRef<HTMLDivElement, CTabContentProps>(\n  ({ children, className, ...rest }, ref) => {\n    return (\n      <div className={classNames('tab-content', className)} {...rest} ref={ref}>\n        {children}\n      </div>\n    )\n  },\n)\n\nCTabContent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nCTabContent.displayName = 'CTabContent'\n","import React, { forwardRef, HTMLAttributes, KeyboardEvent, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { useForkedRef } from '../../hooks'\nimport { getNextActiveElement } from '../../utils'\n\nexport interface CTabListProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Specify a layout type for component.\n   */\n  layout?: 'fill' | 'justified'\n  /**\n   * Set the nav variant to tabs or pills.\n   */\n  variant?: 'pills' | 'tabs' | 'underline' | 'underline-border'\n}\n\nexport const CTabList = forwardRef<HTMLDivElement, CTabListProps>(\n  ({ children, className, layout, variant, ...rest }, ref) => {\n    const tabListRef = useRef<HTMLDivElement>(null)\n    const forkedRef = useForkedRef(ref, tabListRef)\n\n    const handleKeydown = (event: KeyboardEvent<HTMLDivElement>) => {\n      if (\n        tabListRef.current !== null &&\n        (event.key === 'ArrowDown' ||\n          event.key === 'ArrowUp' ||\n          event.key === 'ArrowLeft' ||\n          event.key === 'ArrowRight' ||\n          event.key === 'Home' ||\n          event.key === 'End')\n      ) {\n        event.preventDefault()\n        const target = event.target as HTMLElement\n        // eslint-disable-next-line unicorn/prefer-spread\n        const items: HTMLElement[] = Array.from(\n          tabListRef.current.querySelectorAll('.nav-link:not(.disabled):not(:disabled)'),\n        )\n\n        let nextActiveElement\n\n        if (event.key === 'Home' || event.key === 'End') {\n          nextActiveElement = event.key === 'End' ? items.at(-1) : items[0]\n        } else {\n          nextActiveElement = getNextActiveElement(\n            items,\n            target,\n            event.key === 'ArrowDown' || event.key === 'ArrowRight',\n            true,\n          )\n        }\n\n        if (nextActiveElement) {\n          nextActiveElement.focus({ preventScroll: true })\n        }\n      }\n    }\n\n    return (\n      <div\n        className={classNames(\n          'nav',\n          {\n            [`nav-${layout}`]: layout,\n            [`nav-${variant}`]: variant,\n          },\n          className,\n        )}\n        role=\"tablist\"\n        onKeyDown={handleKeydown}\n        ref={forkedRef}\n        {...rest}\n      >\n        {children}\n      </div>\n    )\n  },\n)\n\nCTabList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  layout: PropTypes.oneOf(['fill', 'justified']),\n  variant: PropTypes.oneOf(['pills', 'tabs', 'underline', 'underline-border']),\n}\n\nCTabList.displayName = 'CTabList'\n","const getTransitionDurationFromElement = (element: HTMLElement) => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * 1000\n}\n\nexport default getTransitionDurationFromElement\n","import React, { HTMLAttributes, forwardRef, useContext, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { Transition } from 'react-transition-group'\n\nimport { TabsContext } from './CTabs'\nimport { useForkedRef } from '../../hooks'\nimport { getTransitionDurationFromElement } from '../../utils'\n\nexport interface CTabPanelProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * Item key.\n   */\n  itemKey: number | string\n  /**\n   * Callback fired when the component requests to be hidden.\n   */\n  onHide?: () => void\n  /**\n   * Callback fired when the component requests to be shown.\n   */\n  onShow?: () => void\n  /**\n   * Enable fade in and fade out transition.\n   */\n  transition?: boolean\n  /**\n   * Toggle the visibility of component.\n   */\n  visible?: boolean\n}\n\nexport const CTabPanel = forwardRef<HTMLDivElement, CTabPanelProps>(\n  ({ children, className, itemKey, onHide, onShow, transition = true, visible, ...rest }, ref) => {\n    const { _activeItemKey, id } = useContext(TabsContext)\n\n    const tabPaneRef = useRef()\n    const forkedRef = useForkedRef(ref, tabPaneRef)\n\n    const [_visible, setVisible] = useState(visible || _activeItemKey === itemKey)\n\n    useEffect(() => {\n      visible !== undefined && setVisible(visible)\n    }, [visible])\n\n    useEffect(() => {\n      setVisible(_activeItemKey === itemKey)\n    }, [_activeItemKey])\n\n    return (\n      <Transition\n        in={_visible}\n        nodeRef={tabPaneRef}\n        onEnter={onShow}\n        onExit={onHide}\n        timeout={tabPaneRef.current ? getTransitionDurationFromElement(tabPaneRef.current) : 0}\n      >\n        {(state) => (\n          <div\n            className={classNames(\n              'tab-pane',\n              {\n                active: _visible,\n                fade: transition,\n                show: state === 'entered',\n              },\n              className,\n            )}\n            id={`${id}${itemKey}-tab-pane`}\n            role=\"tabpanel\"\n            aria-labelledby={`${id}${itemKey}-tab`}\n            tabIndex={0}\n            ref={forkedRef}\n            {...rest}\n          >\n            {children}\n          </div>\n        )}\n      </Transition>\n    )\n  },\n)\n\nCTabPanel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  itemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onHide: PropTypes.func,\n  onShow: PropTypes.func,\n  transition: PropTypes.bool,\n  visible: PropTypes.bool,\n}\n\nCTabPanel.displayName = 'CTabPanel'\n","import React, { createContext, forwardRef, HTMLAttributes, useEffect, useId, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nexport interface CTabsProps extends Omit<HTMLAttributes<HTMLDivElement>, 'onChange'> {\n  /**\n   * The active item key.\n   */\n  activeItemKey: number | string\n  /**\n   * A string of all className you want applied to the base component.\n   */\n  className?: string\n  /**\n   * The callback is fired when the active tab changes.\n   */\n  onChange?: (value: number | string) => void\n}\n\nexport interface TabsContextProps {\n  _activeItemKey?: number | string\n  setActiveItemKey: React.Dispatch<React.SetStateAction<number | string | undefined>>\n  id?: string\n}\n\nexport const TabsContext = createContext({} as TabsContextProps)\n\nexport const CTabs = forwardRef<HTMLDivElement, CTabsProps>(\n  ({ children, activeItemKey, className, onChange }, ref) => {\n    const id = useId()\n    const [_activeItemKey, setActiveItemKey] = useState(activeItemKey)\n\n    useEffect(() => {\n      _activeItemKey && onChange && onChange(_activeItemKey)\n    }, [_activeItemKey])\n\n    return (\n      <TabsContext.Provider value={{ _activeItemKey, setActiveItemKey, id }}>\n        <div className={classNames('tabs', className)} ref={ref}>\n          {children}\n        </div>\n      </TabsContext.Provider>\n    )\n  },\n)\n\nCTabs.propTypes = {\n  activeItemKey: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n}\n\nCTabs.displayName = 'CTabs'\n"],"names":["getBmcInventoryCatalogList","async","userId","page","props","api","get","headers","apiHeader","data","error","console","getSearchedBmcInventoryCatalogList","vendor","boa","getBmcInventoryCatalogDetail","bmcUUID","updatePowerControlSet","powerOption","bmcIp","bodyParams","log","updateFanControlSet","fanOption","getMonitorBmcServerList","response","getSearchedMonitorBmcServerList","boaName","power","fan","getMonitorSensorEventLog","getSearchedMonitorSensorEventLog","sensorType","startDate","endDate","url","visible","setVisible","_jsxs","CModal","size","alignment","onClose","labelledby","children","_jsx","CModalHeader","CModalTitle","id","CModalBody","className","CForm","CRow","src","allowFullScreen","CModalFooter","CCol","ButtonSecondary","text","onClick","dispatch","useDispatch","setData","useState","useEffect","then","inventory_detail","length","type","showAlertModal","isShow","title","msg","catch","TitleContentTemplate","value","serial_num","firmware_version","model","bios_version","mac_address","bios_build_time","power_status","_Fragment","powerValue","fanValue","initTab","callBack","selectedItem","setSelectedItem","selectedTab","setSelectedTab","clearAndClose","onSelectTap","tab","CTabs","activeItemKey","onChange","e","CTabList","variant","CTab","itemKey","CTabContent","CTabPanel","CCardTitle","style","color","height","label","map","item","index","CFormCheck","name","checked","target","split","ButtonPrimary","result","_ref","list","callback","items","setItems","selectedControlMenu","setSelectedControlMenu","contorlModalVisible","setContorlModalVisible","consoleModalVisible","setConsoleModalVisible","showControlPopup","selectedMenu","transformedData","check","bmc_UUID","bmcName","bmc_name","boa_name","bmc_ip","version","cpuTemp","cpu_temp","memTemp","mem_temp","psu","volt","_cellProps","class","scope","columns","key","_props","CTable","align","responsive","bordered","hover","CTableHead","CTableRow","column","CTableHeaderCell","CTableBody","CTableDataCell","Link","showDetailPopup","InventoryCatalogDetailModal","PowerAndFanContorlModal","AppIfameModal","MonitoringMain","cookies","useCookies","setList","totalPage","setTotalPage","selectBoxReload","setSelectBoxReload","vendorSelectBoxOption","setVendorSelectBoxOption","boaGroupSelectBoxOption","setBoaGroupSelectBoxOption","powerSelectBoxOption","setPowerSelectBoxOption","fanSelectBoxOption","setFanSelectBoxOption","selectedVendor","setSelectedVendor","selectedBoaGroup","setSelectedBoaGroup","selectedPower","setSelectedPower","selectedFan","setSelectedFan","initList","monitoring","pages","getList","isRefresh","getSearchedList","_ref2","CCard","CCardBody","fontWeight","xs","cols","SelectBox","options","SetSelectBoxOptions","SetSelectBoxPageOptions","reload","pageValue","MonitoringList","forwardRef","_a","ref","rest","__rest","_b","useContext","TabsContext","_activeItemKey","setActiveItemKey","isActive","React","__assign","classNames","active","concat","onFocus","role","tabIndex","propTypes","PropTypes","disabled","isRequired","displayName","layout","tabListRef","useRef","forkedRef","useForkedRef","onKeyDown","event","current","preventDefault","Array","from","querySelectorAll","nextActiveElement","at","getNextActiveElement","focus","preventScroll","getTransitionDurationFromElement","element","window","getComputedStyle","transitionDuration","transitionDelay","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","onHide","onShow","transition","_c","tabPaneRef","_d","_visible","undefined","Transition","in","nodeRef","onEnter","onExit","timeout","state","fade","show","createContext","useId","Provider"],"sourceRoot":""}