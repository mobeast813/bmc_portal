{"version":3,"file":"static/js/128.22df0a75.chunk.js","mappings":"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","sources":["apis/bmcDevice/BmcDeviceApi.js","apis/user/AdminApi.js","components/buttons/ButtonOutline.js","components/text/TitleContentTemplate.js","routes.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js","views/admin/userRoleManagement/UserRoleManagementList.js","views/admin/userRoleManagement/EditUserRoleModalBmcList.js","views/admin/userRoleManagement/EditUserRoleModal.js","views/admin/userRoleManagement/UserRoleManagementMain.js"],"sourcesContent":["import api, { apiHeader } from \"../Instance\";\n\n\n///BMC 서버 리스트 데이터 조회\nexport const getBmcServerList = async (props) => {\n\tconst { userId, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/registration/list/${userId}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BMC 서버 리스트 데이터 검색 조회\nexport const getSearchedBmcServerList = async (props) => {\n\tconst { userId, join, vendor, boaName, page } = props\n\ttry {\n\t\tif (join === 0 && vendor === 0 && boaName === 0) {\n\t\t\tconst response = await api.get(`/bmc/registration/list/${userId}/${page}`, {\n\t\t\t\theaders: apiHeader(),\n\t\t\t});\n\t\t\treturn response.data;\n\t\t} else {\n\t\t\tconst response = await api.get(`/bmc/registration/list/${userId}/${join}/${vendor}/${boaName}/${page}`, {\n\t\t\t\theaders: apiHeader(),\n\t\t\t});\n\t\t\treturn response.data;\n\t\t}\n\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n\n///BMC 서버 삭제 \nexport const deleteBmcServer = async (props) => {\n\tconst { bmcUUID } = props\n\ttry {\n\t\tconst bodyParams = { \"bmc_UUID\": bmcUUID }\n\t\t//todo : 테스트 가능할때 풀기\n\t\t// const response = await api.post(`/bmc/registration/delete`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams)\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n\n///BMC 서버 등록\nexport const registerBmcServer = async (props) => {\n\tconst { userId, bmcName, bmcIP, bmcUser, bmcPassword, vendor, boaGroup } = props\n\n\ttry {\n\t\tconst bodyParams = {\n\t\t\t\"user_id\": userId,\n\t\t\t\"bmc_name\": bmcName,\n\t\t\t\"bmc_ip\": bmcIP,\n\t\t\t\"bmc_user\": bmcUser,\n\t\t\t\"bmc_password\": bmcPassword,\n\t\t\t\"vendor\": vendor,\n\t\t\t\"boa_name\": boaGroup\n\t\t}\n\t\t//todo : 테스트 가능할때 열기\n\t\t// const response = await api.post(`/bmc/registration/new`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader,\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams)\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n\n///BOA 그룹 리스트 조회\nexport const getBoaGroupList = async (props) => {\n\tconst { userId, page } = props\n\tconsole.log(userId, page)\n\ttry {\n\t\tconst response = await api.get(`/integration/boa/${userId}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BOA 그룹 삭제\nexport const deleteBoaGroup = async (props) => {\n\tconst { boaId } = props\n\n\ttry {\n\t\tconst bodyParams = { \"boa_id\": boaId }\n\t\t// const response = await api.post(`/boa/delete`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams)\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BOA 그룹 등록\nexport const registerBoaGroup = async (props) => {\n\tconst { userId, boaName, hostIp, hostPort, hostUser, hostPassword, description } = props\n\ttry {\n\t\tconst bodyParams = {\n\t\t\t\"user_id\": userId,\n\t\t\t\"boa_name\": boaName,\n\t\t\t\"host_ip\": hostIp,\n\t\t\t\"host_port\": hostPort,\n\t\t\t\"host_user\": hostUser,\n\t\t\t\"host_pw\": hostPassword,\n\t\t\t\"description\": description,\n\t\t}\n\t\t// const response = await api.post(`/boa/new`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\n\t\t// todo : 추후 테스트 가능할때 삭제\n\t\tconsole.log(bodyParams)\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};","import api, { apiHeader } from \"../Instance\";\n\n///사용자 정보 리스트 조회\nexport const getUserList = async (props) => {\n\tconst { page } = props\n\ttry {\n\t\tconst response = await api.get(`/user/get_list/${page}`, {\n\t\t\theaders: apiHeader()\n\t\t});\n\t\t// {\n\t\t// \t\"users\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"created_date\": \"2024-08-01 19:00:00\",\n\t\t// \t\t\t\"user_email\": \"johndoe1@example.com\",\n\t\t// \t\t\t\"user_id\": \"user1\",\n\t\t// \t\t\t\"user_name\": \"John Doe\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"created_date\": \"2024-08-11 04:00:00\",\n\t\t// \t\t\t\"user_email\": \"hannahgold@example.com\",\n\t\t// \t\t\t\"user_id\": \"user10\",\n\t\t// \t\t\t\"user_name\": \"Hannah Gold\"\n\t\t// \t\t},\n\t\t// \t]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///사용자 정보 리스트 이름검색 조회\nexport const getSearchedUserList = async (props) => {\n\tconst { userName, page } = props\n\ttry {\n\t\tconst response = await api.get(`/user/get_list/${userName}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"users\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"created_date\": \"2024-08-01 19:00:00\",\n\t\t// \t\t\t\"user_email\": \"johndoe1@example.com\",\n\t\t// \t\t\t\"user_id\": \"user1\",\n\t\t// \t\t\t\"user_name\": \"John Doe\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"created_date\": \"2024-08-11 04:00:00\",\n\t\t// \t\t\t\"user_email\": \"hannahgold@example.com\",\n\t\t// \t\t\t\"user_id\": \"user10\",\n\t\t// \t\t\t\"user_name\": \"Hannah Gold\"\n\t\t// \t\t},\n\t\t// \t]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n\n/// 사용자 정보 삭제\nexport const deleteUser = async (props) => {\n\tconst { userId } = props\n\ttry {\n\t\tconst bodyParams = { \"user_id\": userId }\n\t\t// const response = await api.post(`/user/delete`, {\n\t\t// \tparams: bodyParams,\n\t\t// \theaders: apiHeader()\n\t\t// });\n\n\t\t// console.log(response.status)\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams)\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n/// 사용자가 관리하는 BMC 리스트 조회\nexport const getBmcListByUserId = async (props) => {\n\tconst { userId, page } = props\n\ttry {\n\t\tconst response = await api.get(`/user/auth/${userId}/${page}`, {\n\t\t\theaders: apiHeader()\n\t\t});\n\t\t// {\n\t\t// \t\"user_auth\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID-001\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"created_date\": \"2024-07-01 19:15:30\",\n\t\t// \t\t\t\"user_id\": \"user1\",\n\t\t// \t\t\t\"user_name\": \"John Doe\",\n\t\t// \t\t\t\"vendor\": \"Dell\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID-011\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"created_date\": \"2024-07-11 18:10:15\",\n\t\t// \t\t\t\"user_id\": \"user1\",\n\t\t// \t\t\t\"user_name\": \"John Doe\",\n\t\t// \t\t\t\"vendor\": \"SuperMicro\"\n\t\t// \t\t}\n\t\t// \t]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n/// 사용자가 관리하는 BMC 리스트 조회\nexport const getSearchedBmcListByUserId = async (props) => {\n\tconst { userId, vendor, boa, page } = props\n\ttry {\n\t\tconst response = await api.get(`/user/auth/${userId}/${vendor}/${boa}/${page}`, {\n\t\t\theaders: apiHeader()\n\t\t});\n\t\t// {\n\t\t// \t\"user_auth\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID-001\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"created_date\": \"2024-07-01 19:15:30\",\n\t\t// \t\t\t\"user_id\": \"user1\",\n\t\t// \t\t\t\"user_name\": \"John Doe\",\n\t\t// \t\t\t\"vendor\": \"Dell\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID-011\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"created_date\": \"2024-07-11 18:10:15\",\n\t\t// \t\t\t\"user_id\": \"user1\",\n\t\t// \t\t\t\"user_name\": \"John Doe\",\n\t\t// \t\t\t\"vendor\": \"SuperMicro\"\n\t\t// \t\t}\n\t\t// \t]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n/// 사용자가 관리하는 BMC 서버 권한 삭제\nexport const deleteBmcAuthByUserId = async (props) => {\n\tconst { userId, bmcUUID } = props\n\ttry {\n\t\tconst bodyParams = {\n\t\t\t\"user_id\": userId,\n\t\t\t\"bmc_UUID\": bmcUUID\n\t\t}\n\t\t// const response = await api.post(`/user/auth/delete`, {\n\t\t// \tparams: bodyParams,\n\t\t// \theaders: apiHeader()\n\t\t// });\n\n\t\t// return response.data;\n\t\tconsole.log(bodyParams)\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n/// Unjoin 상태의 BMC List 조회\nexport const getUnjoinedBmcList = async (props) => {\n\tconst { userId } = props\n\ttry {\n\t\tconst response = await api.get(`/user/bmc_unjoin/${userId}`, {\n\t\t\theaders: apiHeader()\n\t\t});\n\t\t// {\n\t\t// \t\"unjoin_bmc\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"4b3c3f85-ca37-5659-9263-a53b4be0ce2f\",\n\t\t// \t\t\t\"bmc_ip\": \"10.0.0.1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"vendor\": \"Dell\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"4b3c3f85-ca37-5659-9263-a53b4be0ce2f\",\n\t\t// \t\t\t\"bmc_ip\": \"10.0.0.2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"vendor\": \"HPE\"\n\t\t// \t\t},\n\t\t// \t]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n/// Unjoin 상태의 BMC List 검색 조회\nexport const getSearchedUnjoinedBmcList = async (props) => {\n\tconst { userId, vendor, boa } = props\n\tconsole.log(userId, vendor, boa)\n\tconsole.log(`/user/bmc_unjoin/${userId}/${vendor}/${boa}`)\n\ttry {\n\t\tconst response = await api.get(`/user/bmc_unjoin/${userId}/${vendor}/${boa}`, {\n\t\t\theaders: apiHeader()\n\t\t});\n\t\t// {\n\t\t// \t\"unjoin_bmc\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"4b3c3f85-ca37-5659-9263-a53b4be0ce2f\",\n\t\t// \t\t\t\"bmc_ip\": \"10.0.0.1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"vendor\": \"Dell\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"4b3c3f85-ca37-5659-9263-a53b4be0ce2f\",\n\t\t// \t\t\t\"bmc_ip\": \"10.0.0.2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"vendor\": \"HPE\"\n\t\t// \t\t},\n\t\t// \t]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n/// 사용자의 BMC 권한 부여 요청\nexport const updateUserBmcAuth = async (props) => {\n\tconst { bmcUUIDList, authorization, userId } = props\n\ttry {\n\t\tconst bodyParams = { \"bmc_UUID\": bmcUUIDList, \"user_id\": userId, \"authorization\": authorization }\n\t\t// const response = await api.post(`/user/auth/add`, {\n\t\t// \tparams: bodyParams,\n\t\t// \theaders: apiHeader()\n\t\t// });\n\n\t\t// return response.data;\n\t\tconsole.log(bodyParams)\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};","import { CButton } from \"@coreui/react\";\n\nconst ButtonOutLine = (props) => {\n\tconst { text, onClick } = props\n\treturn <CButton\n\t\tcolor=\"outline-secondary\"\n\t\tclassName=\"w-auto me-2\"\n\t\tonClick={onClick}\n\t>\n\t\t{text}\n\t</CButton>\n}\n\nexport default ButtonOutLine","import { CCol, CFormInput, CFormLabel } from \"@coreui/react\"\n\nconst TitleContentTemplate = (props) => {\n\tconst { title, value, col } = props\n\tconst classString = `col-form-label  me-2 col-${col ? col : \"3\"}`\n\treturn (\n\t\t<CCol sm={6} className=\"d-flex align-items-center\">\n\t\t\t<CFormLabel className={classString}>\n\t\t\t\t{title}\n\t\t\t</CFormLabel>\n\t\t\t<CFormInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tid={title}\n\t\t\t\tvalue={value}\n\t\t\t\treadOnly={true}\n\t\t\t\tdisabled={true}\n\t\t\t/>\n\t\t</CCol>\n\t)\n}\n\nexport default TitleContentTemplate","import React from \"react\";\nimport Page500 from \"./views/error/Page500\";\nimport Page404 from \"./views/error/Page404\";\n\nconst Dashboard = React.lazy(() => import(\"./views/dashboard/Dashboard\"));\nconst BmcServerMain = React.lazy(() => import(\"./views/bmcDevices/bmcServer/BmcServerMain\"));\nconst BoaGroupMain = React.lazy(() => import(\"./views/bmcDevices/boaGroup/BoaGroupMain\"));\nconst MonitoringMain = React.lazy(() => import(\"./views/monitoring/bmc_monitoring/MonitoringMain\"));\nconst EventLogMain = React.lazy(() => import(\"./views/monitoring/eventLog/EventLogMain\"));\nconst InventoryCatalogMain = React.lazy(() => import(\"./views/maintenance/InventoryCatalogMain\"));\nconst UserManagementMain = React.lazy(() => import(\"./views/admin/userManagement/UserManagementMain\"));\nconst UserRoleManagementMain = React.lazy(() => import(\"./views/admin/userRoleManagement/UserRoleManagementMain\"));\n\n\n\nconst routes = [\n\t{\n\t\tpath: \"/500\",\n\t\tname: \"500 Error\",\n\t\telement: Page500,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/404\",\n\t\tname: \"404 Error\",\n\t\telement: Page404,\n\t\tprotected: true,\n\t},\n\t{ path: \"/\", exact: true, name: \"Home\" },\n\t{\n\t\tpath: \"/dashboard\",\n\t\tname: \"Dashboard\",\n\t\telement: Dashboard,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/bmc-device/server\",\n\t\tname: \"BMC Server\",\n\t\telement: BmcServerMain,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/bmc-device/boa-group\",\n\t\tname: \"BOA Group\",\n\t\telement: BoaGroupMain,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/monitoring/all\",\n\t\tname: \"Monitoring BMC\",\n\t\telement: MonitoringMain,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/monitoring/event-log\",\n\t\tname: \"Monitoring Event Log\",\n\t\telement: EventLogMain,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/maintenance/inventory-catalog\",\n\t\tname: \"BMC Inventory Catalog\",\n\t\telement: InventoryCatalogMain,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/admin/manage-user\",\n\t\tname: \"User Management\",\n\t\telement: UserManagementMain,\n\t\tprotected: true,\n\t},\n\t{\n\t\tpath: \"/admin/manage-user-role/:userId\",\n\t\tname: \"User Role Management\",\n\t\telement: UserRoleManagementMain,\n\t\tprotected: true,\n\t},\n\n];\n\nexport default routes;\n","import React, { Suspense } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { CContainer, CSpinner } from \"@coreui/react\";\nimport { Cookies } from \"react-cookie\";\n\n// routes config\nimport routes from \"../routes\";\nimport UserRoleManagementMain from \"../views/admin/userRoleManagement/UserRoleManagementMain\";\n\nconst AppContent = () => {\n\t// 쿠키에서 특정 이름의 쿠키 값을 가져오는 함수\n\tconst getCookie = (name) => {\n\t\tconst cookieArr = document.cookie.split(\";\");\n\n\t\tfor (let i = 0; i < cookieArr.length; i++) {\n\t\t\tconst cookiePair = cookieArr[i].split(\"=\");\n\n\t\t\t// 쿠키 이름과 일치하는 쿠키 값을 반환\n\t\t\tif (name === cookiePair[0].trim()) {\n\t\t\t\treturn decodeURIComponent(cookiePair[1]);\n\t\t\t}\n\t\t}\n\n\t\t// 쿠키를 찾지 못한 경우 null 반환\n\t\treturn null;\n\t};\n\n\treturn (\n\t\t<CContainer className=\"px-4\" lg style={{ maxWidth: \"100%\" }}>\n\t\t\t<Suspense fallback={<CSpinner color=\"primary\" />}>\n\t\t\t\t<Routes>\n\t\t\t\t\t{/* <Route path=\"/admin/manage-user-role/:id\" element={<UserRoleManagementMain />} /> */}\n\t\t\t\t\t{routes.map((route, idx) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\troute.element && (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tname={route.name}\n\t\t\t\t\t\t\t\t\t// element={<route.element />}\n\t\t\t\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t\t\t\troute.protected && getCookie(\"accessToken\") != null ? ( // 로컬에 저장한 accessToken이 만료가 안됐을 때로 바꿔야함\n\t\t\t\t\t\t\t\t\t\t\t<route.element />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Navigate to=\"/login\" replace />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t\t<Route path=\"/\" element={<Navigate to=\"login\" replace />} />\n\t\t\t\t</Routes>\n\t\t\t</Suspense>\n\t\t</CContainer>\n\t);\n};\n\nexport default React.memo(AppContent);\n","import React from \"react\";\nimport { CFooter } from \"@coreui/react\";\n\nconst AppFooter = () => {\n\treturn (\n\t\t<CFooter className=\"px-4\">\n\t\t\t<h4>BMC Portal</h4>\n\t\t\t<div style={{ fontSize: \"12px\" }}>\n\t\t\t\t&copy; 서울특별시 금천구 가산디지털1로1 더루벤스밸리 505호 대표전화 : 070-7733-0247\n\t\t\t\t<br />COPYRIGHT ⓒ 2023 주식회사꾸미다. ALL RIGHT RESERVED.\n\t\t\t</div>\n\t\t</CFooter >\n\t);\n};\n\nexport default React.memo(AppFooter);","import React from \"react\";\nimport {\n\tCDropdown,\n\tCDropdownHeader,\n\tCDropdownItem,\n\tCDropdownMenu,\n\tCDropdownToggle,\n} from \"@coreui/react\";\nimport {\n\tcilSettings,\n\tcilAccountLogout,\n} from \"@coreui/icons\";\nimport CIcon from \"@coreui/icons-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Cookies, useCookies } from \"react-cookie\";\n\nconst AppHeaderDropdown = () => {\n\tconst navigate = useNavigate();\n\tconst [cookies, setCookie, removeCookie] = useCookies([\"accessToken\"]);\n\n\treturn (\n\t\t<CDropdown variant=\"nav-item\">\n\t\t\t<CDropdownToggle\n\t\t\t\tplacement=\"bottom-end\"\n\t\t\t\tcaret={false}\n\t\t\t>\n\t\t\t\t<CIcon icon={cilSettings} size=\"lg\" />\n\t\t\t</CDropdownToggle>\n\t\t\t<CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n\t\t\t\t<CDropdownHeader className=\"bg-body-secondary fw-semibold mb-2\">\n\t\t\t\t\tAccount\n\t\t\t\t</CDropdownHeader>\n\t\t\t\t<CDropdownItem\n\t\t\t\t\thref=\"#\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t// 쿠키 삭제\n\t\t\t\t\t\tconst headersCookies = new Cookies();\n\t\t\t\t\t\tremoveCookie(\"accessToken\", { path: '/', domain: 'keti.pro' });\n\t\t\t\t\t\tremoveCookie(\"roleName\");\n\t\t\t\t\t\tremoveCookie(\"loggedInUserTabs\");\n\t\t\t\t\t\tremoveCookie(\"userId\");\n\n\t\t\t\t\t\theadersCookies.remove(\"accessToken\")\n\t\t\t\t\t\theadersCookies.remove(\"roleName\")\n\t\t\t\t\t\theadersCookies.remove(\"loggedInUserTabs\")\n\t\t\t\t\t\theadersCookies.remove(\"userId\")\n\n\t\t\t\t\t\tconsole.log(cookies)\n\t\t\t\t\t\tconsole.log(headersCookies)\n\n\t\t\t\t\t\t// document.cookie =\n\t\t\t\t\t\t//   \"accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n\t\t\t\t\t\t// document.cookie =\n\t\t\t\t\t\t//   \"refreshToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n\t\t\t\t\t\tnavigate(\"/login\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CIcon icon={cilAccountLogout} className=\"me-2\" />\n\t\t\t\t\t로그아웃\n\t\t\t\t</CDropdownItem>\n\t\t\t</CDropdownMenu>\n\t\t</CDropdown>\n\t);\n};\n\nexport default AppHeaderDropdown;\n","import React, { useEffect, useRef } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n\tCContainer,\n\tCDropdown,\n\tCDropdownItem,\n\tCDropdownMenu,\n\tCDropdownToggle,\n\tCHeader,\n\tCHeaderNav,\n\tCHeaderToggler,\n\tCNavLink,\n\tCNavItem,\n\tuseColorModes,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n\tcilBell,\n\tcilContrast,\n\tcilEnvelopeOpen,\n\tcilList,\n\tcilMenu,\n\tcilMoon,\n\tcilSun,\n} from \"@coreui/icons\";\n\nimport { AppBreadcrumb } from \"./index\";\nimport { AppHeaderDropdown } from \"./header/index\";\n\nconst AppHeader = () => {\n\tconst headerRef = useRef();\n\tconst { colorMode, setColorMode } = useColorModes(\"light\");\n\n\tconst dispatch = useDispatch();\n\tconst sidebarShow = useSelector((state) => state.sidebarShow);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener(\"scroll\", () => {\n\t\t\theaderRef.current &&\n\t\t\t\theaderRef.current.classList.toggle(\n\t\t\t\t\t\"shadow-sm\",\n\t\t\t\t\tdocument.documentElement.scrollTop > 0\n\t\t\t\t);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<CHeader position=\"sticky\" className=\"mb-4 p-0\" ref={headerRef}>\n\t\t\t<CContainer className=\"border-bottom px-4\" fluid>\n\t\t\t\t<CHeaderToggler\n\t\t\t\t\tonClick={() => dispatch({ type: \"set\", sidebarShow: !sidebarShow })}\n\t\t\t\t\tstyle={{ marginInlineStart: \"-14px\" }}\n\t\t\t\t>\n\t\t\t\t\t<CIcon icon={cilMenu} size=\"lg\" />\n\t\t\t\t</CHeaderToggler>\n\t\t\t\t<CHeaderNav className=\"d-none d-md-flex\">\n\t\t\t\t\t{/* <CNavItem>\n            <CNavLink to=\"/dashboard\" as={NavLink}>\n              대시보드\n            </CNavLink>\n          </CNavItem> */}\n\t\t\t\t\t{/* <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem> */}\n\t\t\t\t</CHeaderNav>\n\t\t\t\t{/* <CHeaderNav className=\"ms-auto\">\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav> */}\n\t\t\t\t<CHeaderNav>\n\t\t\t\t\t<li className=\"nav-item py-1\">\n\t\t\t\t\t\t<div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n\t\t\t\t\t</li>\n\t\t\t\t\t<CDropdown variant=\"nav-item\" placement=\"bottom-end\">\n\t\t\t\t\t\t<CDropdownToggle caret={false}>\n\t\t\t\t\t\t\t{colorMode === \"dark\" ? (\n\t\t\t\t\t\t\t\t<CIcon icon={cilMoon} size=\"lg\" />\n\t\t\t\t\t\t\t) : colorMode === \"auto\" ? (\n\t\t\t\t\t\t\t\t<CIcon icon={cilContrast} size=\"lg\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<CIcon icon={cilSun} size=\"lg\" />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</CDropdownToggle>\n\t\t\t\t\t\t<CDropdownMenu>\n\t\t\t\t\t\t\t<CDropdownItem\n\t\t\t\t\t\t\t\tactive={colorMode === \"light\"}\n\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center\"\n\t\t\t\t\t\t\t\tas=\"button\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={() => setColorMode(\"light\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon className=\"me-2\" icon={cilSun} size=\"lg\" /> Light\n\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t<CDropdownItem\n\t\t\t\t\t\t\t\tactive={colorMode === \"dark\"}\n\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center\"\n\t\t\t\t\t\t\t\tas=\"button\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={() => setColorMode(\"dark\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon className=\"me-2\" icon={cilMoon} size=\"lg\" /> Dark\n\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t\t<CDropdownItem\n\t\t\t\t\t\t\t\tactive={colorMode === \"auto\"}\n\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center\"\n\t\t\t\t\t\t\t\tas=\"button\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={() => setColorMode(\"auto\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<CIcon className=\"me-2\" icon={cilContrast} size=\"lg\" /> Auto\n\t\t\t\t\t\t\t</CDropdownItem>\n\t\t\t\t\t\t</CDropdownMenu>\n\t\t\t\t\t</CDropdown>\n\t\t\t\t\t<li className=\"nav-item py-1\">\n\t\t\t\t\t\t<div className=\"vr h-100 mx-2 text-body text-opacity-75\"></div>\n\t\t\t\t\t</li>\n\t\t\t\t\t<AppHeaderDropdown />\n\t\t\t\t</CHeaderNav>\n\t\t\t</CContainer>\n\t\t\t{/* <CContainer className=\"px-4\" fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n\t\t</CHeader>\n\t);\n};\n\nexport default AppHeader;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar-react/dist/simplebar.min.css'\n\nimport { CBadge, CNavLink, CSidebarNav } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n\tconst navLink = (name, icon, badge, indent = false) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{icon\n\t\t\t\t\t? icon\n\t\t\t\t\t: indent && (\n\t\t\t\t\t\t<span className=\"nav-icon\">\n\t\t\t\t\t\t\t<span className=\"nav-icon-bullet\"></span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t{name && name}\n\t\t\t\t{badge && (\n\t\t\t\t\t<CBadge color={badge.color} className=\"ms-auto\">\n\t\t\t\t\t\t{badge.text}\n\t\t\t\t\t</CBadge>\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst navItem = (item, index, indent = false) => {\n\t\tconst { component, name, badge, icon, ...rest } = item\n\t\tconst Component = component\n\t\treturn (\n\t\t\t<Component as=\"div\" key={index}>\n\t\t\t\t{rest.to || rest.href ? (\n\t\t\t\t\t<CNavLink {...(rest.to && { as: NavLink })} {...rest}>\n\t\t\t\t\t\t{navLink(name, icon, badge, indent)}\n\t\t\t\t\t</CNavLink>\n\t\t\t\t) : (\n\t\t\t\t\tnavLink(name, icon, badge, indent)\n\t\t\t\t)}\n\t\t\t</Component>\n\t\t)\n\t}\n\n\tconst navGroup = (item, index) => {\n\t\tconst { component, name, icon, items, to, ...rest } = item\n\t\tconst Component = component\n\t\treturn (\n\t\t\t<Component compact as=\"div\" key={index} toggler={navLink(name, icon)} {...rest}>\n\t\t\t\t{item.items?.map((item, index) =>\n\t\t\t\t\titem.items ? navGroup(item, index) : navItem(item, index, true),\n\t\t\t\t)}\n\t\t\t</Component>\n\t\t)\n\t}\n\n\treturn (\n\t\t<CSidebarNav as={SimpleBar}>\n\t\t\t{items &&\n\t\t\t\titems.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n\t\t</CSidebarNav>\n\t)\n}\n\nAppSidebarNav.propTypes = {\n\titems: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from \"react\";\nimport CIcon from \"@coreui/icons-react\";\nimport {\n\tcilAlbum, cilBasket,\n\tcilBell,\n\tcilCalculator,\n\tcilChartPie,\n\tcilCursor,\n\tcilDescription,\n\tcilDrop,\n\tcilLayers,\n\tcilNotes,\n\tcilPencil,\n\tcilPuzzle,\n\tcilScreenDesktop,\n\tcilSpeedometer,\n\tcilStar,\n} from \"@coreui/icons\";\nimport { CNavGroup, CNavItem, CNavTitle } from \"@coreui/react\";\nconst _nav = [\n\t{\n\t\tcomponent: CNavItem,\n\t\tname: \"DashBoard\",\n\t\tid: 0,\n\t\tto: \"/dashboard\",\n\t\ticon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n\t},\n\n\t{\n\t\tcomponent: CNavGroup,\n\t\tname: \"BMC Device\",\n\t\tid: 1,\n\t\tto: \"/bmc-device\",\n\t\ticon: <CIcon icon={cilLayers} customClassName=\"nav-icon\" />,\n\t\titems: [\n\t\t\t{\n\t\t\t\tcomponent: CNavItem,\n\t\t\t\tname: \"BMC 서버 관리\",\n\t\t\t\tid: 5,\n\t\t\t\tto: \"/bmc-device/server\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: CNavItem,\n\t\t\t\tname: \"BOA 그룹 관리\",\n\t\t\t\tid: 6,\n\t\t\t\tto: \"/bmc-device/boa-group\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tcomponent: CNavGroup,\n\t\tname: \"Monitoring\",\n\t\tid: 2,\n\t\tto: \"/monitoring\",\n\t\ticon: <CIcon icon={cilScreenDesktop} customClassName=\"nav-icon\" />,\n\t\titems: [\n\t\t\t{\n\t\t\t\tcomponent: CNavItem,\n\t\t\t\tname: \"통합모니터링\",\n\t\t\t\tid: 7,\n\t\t\t\tto: \"/monitoring/all\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomponent: CNavItem,\n\t\t\t\tname: \"Event Log\",\n\t\t\t\tid: 8,\n\t\t\t\tto: \"/monitoring/event-log\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tcomponent: CNavGroup,\n\t\tname: \"Maintenance\",\n\t\tid: 3,\n\t\ticon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n\t\titems: [\n\t\t\t{\n\t\t\t\tcomponent: CNavItem,\n\t\t\t\tname: \"Inventory Catalog\",\n\t\t\t\tid: 9,\n\t\t\t\tto: \"/maintenance/inventory-catalog\",\n\t\t\t},\n\t\t],\n\t},\n\n\t{\n\t\tcomponent: CNavGroup,\n\t\tname: \"Admin\",\n\t\tid: 4,\n\t\ticon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n\t\titems: [\n\t\t\t{\n\t\t\t\tcomponent: CNavItem,\n\t\t\t\tname: \"사용자 관리\",\n\t\t\t\tid: 10,\n\t\t\t\tto: \"/admin/manage-user\",\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tcomponent: CNavItem,\n\t\t\t// \tname: \"사용자 권한 관리\",\n\t\t\t// \tid: 11,\n\t\t\t// \tto: \"/admin/manage-user-role\",\n\t\t\t// },\n\t\t],\n\t},\n];\n\nexport default _nav;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n\tCCardTitle,\n\tCCol,\n\tCRow,\n\tCSidebar,\n\tCSidebarBrand,\n\tCSidebarFooter,\n\tCSidebarHeader,\n} from \"@coreui/react\";\nimport { AppSidebarNav } from \"./AppSidebarNav\";\n\n// sidebar nav config\nimport navigation from \"../_nav\";\nimport { useCookies } from \"react-cookie\";\n\nconst AppSidebar = () => {\n\tconst dispatch = useDispatch();\n\tconst unfoldable = useSelector((state) => state.sidebarUnfoldable);\n\tconst sidebarShow = useSelector((state) => state.sidebarShow);\n\tconst loggedInUserTabs = useSelector((state) => state.loggedInUserTabs);\n\tconst [filteredNav, setFilteredNav] = useState([]);\n\tconst [cookies, setCookie] = useCookies([\"loggedInUserTabs\"]);\n\n\n\tuseEffect(() => {\n\t\tconst tabInfo = cookies.loggedInUserTabs;\n\n\t\tif (tabInfo) {\n\t\t\tconst parsedTabs = tabInfo;\n\n\t\t\t// _nav 필터링하기\n\t\t\tconst filtered = [...navigation].filter((item) =>\n\t\t\t\tparsedTabs.includes(item.id)\n\t\t\t);\n\n\n\t\t\t// 대시보드 항목을 찾아내기\n\t\t\tconst dashboard = navigation.find((item) => item.id === 0);\n\n\t\t\t// 선택한 아이디만을 갖고 있는 객체로 필터링\n\t\t\tconst filteredItems = filtered.map((item) => {\n\t\t\t\tif (Array.isArray(item.items)) {\n\t\t\t\t\titem.items = item.items.filter((subItem) =>\n\t\t\t\t\t\tparsedTabs.includes(subItem.id)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\tfilteredItems.unshift(dashboard); // 대시보드 항목 배열 맨 앞에 추가\n\t\t\tsetFilteredNav(filteredItems);\n\t\t}\n\t}, [cookies, navigation]);\n\n\treturn (\n\t\t<CSidebar\n\t\t\tclassName=\"border-end\"\n\t\t\t// colorScheme=\"dark\"\n\t\t\tposition=\"fixed\"\n\t\t\tunfoldable={unfoldable}\n\t\t\tvisible={sidebarShow}\n\t\t\tonVisibleChange={(visible) => {\n\t\t\t\tdispatch({ type: \"set\", sidebarShow: visible });\n\t\t\t}}\n\t\t>\n\t\t\t<CSidebarHeader className=\"border-bottom\">\n\t\t\t\t<CSidebarBrand to=\"/\">\n\t\t\t\t\t<CRow className=\"align-items-center\">\n\t\t\t\t\t\t<CCol className=\"align-items-center\">\n\t\t\t\t\t\t\t<CRow className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t<CCardTitle style={{ fontWeight: \"bold\" }}>\n\t\t\t\t\t\t\t\t\tBMC Portal\n\t\t\t\t\t\t\t\t</CCardTitle>\n\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t</CRow>\n\t\t\t\t</CSidebarBrand>\n\t\t\t</CSidebarHeader>\n\t\t\t<AppSidebarNav items={filteredNav} />\n\t\t\t<CSidebarFooter className=\"border-top d-none d-lg-flex\">\n\t\t\t\t{/* <CSidebarToggler\n          onClick={() =>\n            dispatch({ type: \"set\", sidebarUnfoldable: !unfoldable })\n          }\n        /> */}\n\t\t\t</CSidebarFooter>\n\t\t</CSidebar>\n\t);\n};\n\nexport default React.memo(AppSidebar);\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n\treturn (\n\t\t<div>\n\t\t\t<AppSidebar />\n\t\t\t<div className=\"wrapper d-flex flex-column min-vh-100\">\n\t\t\t\t<AppHeader />\n\t\t\t\t<div className=\"body flex-grow-1\">\n\t\t\t\t\t<AppContent />\n\t\t\t\t</div>\n\t\t\t\t<AppFooter />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default DefaultLayout\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tCFormCheck,\n\tCTable,\n\tCTableBody,\n\tCTableDataCell,\n\tCTableHead,\n\tCTableHeaderCell,\n\tCTableRow,\n} from \"@coreui/react\";\n\nconst UserRoleManagementList = ({\n\tlist,\n\tselectId,\n\tunselectId,\n\tselectAll,\n\tunselectAll,\n\tresetCheckbox,\n}) => {\n\tconst [items, setItems] = useState();\n\tconst [headCheckStates, setHeadCheckStates] = useState(false);\n\tconst [checkboxStates, setCheckboxStates] = useState({});\n\tconst [visible, setVisible] = useState(false);\n\tconst [selectedItem, setSelectedItem] = useState();\n\n\tconst handleCheckboxChange = (id, isChecked) => {\n\t\tsetCheckboxStates((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[id]: isChecked,\n\t\t}));\n\t};\n\n\tuseEffect(() => {\n\t\tsetHeadCheckStates(false)\n\t\tif (items) {\n\t\t\titems.forEach((item) => {\n\t\t\t\tcheckboxStates[item.bmcUUID] = false;\n\t\t\t});\n\t\t}\n\t\tunselectAll();\n\t}, [resetCheckbox])\n\n\tconst showDetailPopup = (bmcUUID) => {\n\t\tsetSelectedItem(bmcUUID)\n\t\tsetVisible(true);\n\t}\n\n\n\tuseEffect(() => {\n\t\t// checkboxStates가 초기 상태({})인 경우 실행하지 않음\n\t\tif (Object.keys(checkboxStates).length === 0) return;\n\n\t\t// 모든 id가 true인지 확인\n\t\tconst allChecked = Object.values(checkboxStates).every((value) => value);\n\n\t\tif (allChecked) {\n\t\t\t// 모든 id가 true일 때 실행할 코드\n\t\t\tsetHeadCheckStates(true);\n\t\t} else {\n\t\t\tsetHeadCheckStates(false);\n\t\t}\n\t}, [checkboxStates]); // checkboxStates가 변경될 때마다 useEffect 실행\n\n\tuseEffect(() => {\n\t\tif (list) {\n\t\t\tconst transformedData = list.map((item) => ({\n\t\t\t\tcheck: \"\",\n\t\t\t\tuserId: item.user_id,\n\t\t\t\tbmcUUID: item.bmc_UUID,\n\t\t\t\tboaName: item.boa_name,\n\t\t\t\tuserName: item.user_name,\n\t\t\t\tvendor: item.vendor,\n\t\t\t\tcreatedDate: item.created_date,\n\t\t\t\t_cellProps: { class: { scope: \"row\" } },\n\t\t\t}));\n\t\t\tsetItems(transformedData);\n\t\t}\n\t}, [list]);\n\n\n\n\tconst columns = [\n\t\t{ key: \"check\", label: \"선택\", _props: { scope: \"col\" } },\n\t\t{ key: \"user_id\", label: \"User ID\", _props: { scope: \"col\" } },\n\t\t// { key: \"user_name\", label: \"사용자이름\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_UUID\", label: \"서버ID\", _props: { scope: \"col\" } },\n\t\t// { key: \"bmc_name\", label: \"서버명\", _props: { scope: \"col\" } },\n\t\t{ key: \"boa_name\", label: \"그룹\", _props: { scope: \"col\" } },\n\t\t{ key: \"vendor\", label: \"벤더\", _props: { scope: \"col\" } },\n\t\t{ key: \"created_date\", label: \"등록일\", _props: { scope: \"col\" } },\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<CTable align=\"middle\" responsive bordered={true} hover={true}>\n\t\t\t\t<CTableHead align=\"middle\" color=\"primary\">\n\t\t\t\t\t<CTableRow>\n\t\t\t\t\t\t{columns?.map((column, key) => (\n\t\t\t\t\t\t\t<CTableHeaderCell key={key}>\n\t\t\t\t\t\t\t\t{column.label == \"선택\" ? (\n\t\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\t\tchecked={headCheckStates || false}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\t\tsetHeadCheckStates(isChecked);\n\t\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.bmcUUID] = true;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tselectAll();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.bmcUUID] = false;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tunselectAll();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t&nbsp; {column.label}\n\t\t\t\t\t\t\t</CTableHeaderCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CTableRow>\n\t\t\t\t</CTableHead>\n\n\t\t\t\t<CTableBody align=\"middle\">\n\t\t\t\t\t{items?.map((item, key) => (\n\t\t\t\t\t\t<CTableRow key={key}>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tid={`gridCheck-${item.bmcUUID}`}\n\t\t\t\t\t\t\t\t\tchecked={checkboxStates[item.bmcUUID] || false}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\thandleCheckboxChange(item.bmcUUID, isChecked);\n\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\tselectId(item.bmcUUID);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tunselectId(item.bmcUUID);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.userId}</CTableDataCell>\n\t\t\t\t\t\t\t{/* <CTableDataCell>{item.userName}</CTableDataCell> */}\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcUUID}</CTableDataCell>\n\t\t\t\t\t\t\t{/* <CTableDataCell>{item.bmcName}</CTableDataCell> */}\n\t\t\t\t\t\t\t<CTableDataCell>{item.boaName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.vendor}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.createdDate}</CTableDataCell>\n\t\t\t\t\t\t</CTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</CTableBody>\n\t\t\t</CTable>\n\t\t</>\n\t);\n};\n\nexport default UserRoleManagementList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tCFormCheck,\n\tCTable,\n\tCTableBody,\n\tCTableDataCell,\n\tCTableHead,\n\tCTableHeaderCell,\n\tCTableRow,\n} from \"@coreui/react\";\n\nconst EditUserRoleModalBmcList = ({\n\tlist,\n\tselectId,\n\tunselectId,\n\tselectAll,\n\tunselectAll,\n\tresetCheckbox,\n}) => {\n\tconst [items, setItems] = useState();\n\tconst [headCheckStates, setHeadCheckStates] = useState(false);\n\tconst [checkboxStates, setCheckboxStates] = useState({});\n\n\tconst handleCheckboxChange = (id, isChecked) => {\n\t\tsetCheckboxStates((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[id]: isChecked,\n\t\t}));\n\t};\n\n\tuseEffect(() => {\n\t\tsetHeadCheckStates(false)\n\t\tif (items) {\n\t\t\titems.forEach((item) => {\n\t\t\t\tcheckboxStates[item.bmcUUID] = false;\n\t\t\t});\n\t\t}\n\t\tunselectAll();\n\t}, [resetCheckbox])\n\n\n\n\n\tuseEffect(() => {\n\t\t// checkboxStates가 초기 상태({})인 경우 실행하지 않음\n\t\tif (Object.keys(checkboxStates).length === 0) return;\n\n\t\t// 모든 id가 true인지 확인\n\t\tconst allChecked = Object.values(checkboxStates).every((value) => value);\n\n\t\tif (allChecked) {\n\t\t\t// 모든 id가 true일 때 실행할 코드\n\t\t\tsetHeadCheckStates(true);\n\t\t} else {\n\t\t\tsetHeadCheckStates(false);\n\t\t}\n\t}, [checkboxStates]); // checkboxStates가 변경될 때마다 useEffect 실행\n\n\tuseEffect(() => {\n\t\tif (list) {\n\t\t\tconst transformedData = list.map((item) => ({\n\t\t\t\tcheck: \"\",\n\t\t\t\tuserId: item.user_id,\n\t\t\t\tbmcUUID: item.bmc_UUID,\n\t\t\t\tbmcName: item.bmc_name,\n\t\t\t\tbmcIp: item.bmc_ip,\n\t\t\t\tvendor: item.vendor,\n\t\t\t\tboaName: item.boa_name,\n\t\t\t\tcreatedDate: item.created_date,\n\t\t\t\t_cellProps: { class: { scope: \"row\" } },\n\t\t\t}));\n\t\t\tsetItems(transformedData);\n\t\t}\n\t}, [list]);\n\n\n\n\tconst columns = [\n\t\t{ key: \"check\", label: \"선택\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_UUID\", label: \"서버ID\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_name\", label: \"서버명\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_ip\", label: \"IP\", _props: { scope: \"col\" } },\n\t\t{ key: \"vendor\", label: \"벤더\", _props: { scope: \"col\" } },\n\t\t{ key: \"boa_name\", label: \"그룹\", _props: { scope: \"col\" } },\n\t\t{ key: \"user_id\", label: \"User ID\", _props: { scope: \"col\" } },\n\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<CTable align=\"middle\" responsive bordered={true} hover={true}>\n\t\t\t\t<CTableHead align=\"middle\" color=\"primary\">\n\t\t\t\t\t<CTableRow>\n\t\t\t\t\t\t{columns?.map((column, key) => (\n\t\t\t\t\t\t\t<CTableHeaderCell key={key}>\n\t\t\t\t\t\t\t\t{column.label == \"선택\" ? (\n\t\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\t\tchecked={headCheckStates || false}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\t\tsetHeadCheckStates(isChecked);\n\t\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.bmcUUID] = true;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tselectAll();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.bmcUUID] = false;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tunselectAll();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t&nbsp; {column.label}\n\t\t\t\t\t\t\t</CTableHeaderCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CTableRow>\n\t\t\t\t</CTableHead>\n\n\t\t\t\t<CTableBody align=\"middle\">\n\t\t\t\t\t{items?.map((item, key) => (\n\t\t\t\t\t\t<CTableRow key={key}>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tid={`gridCheck-${item.bmcUUID}`}\n\t\t\t\t\t\t\t\t\tchecked={checkboxStates[item.bmcUUID] || false}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\thandleCheckboxChange(item.bmcUUID, isChecked);\n\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\tselectId(item.bmcUUID);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tunselectId(item.bmcUUID);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcUUID}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcIp}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.vendor}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.boaName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.userId}</CTableDataCell>\n\t\t\t\t\t\t</CTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</CTableBody>\n\t\t\t</CTable>\n\t\t</>\n\t);\n};\n\nexport default EditUserRoleModalBmcList;\n","import { CCol, CForm, CFormLabel, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport InputTitleTemplate from \"../../../components/text/InputTitleTemplate\";\nimport { registerBmcServer } from \"../../../apis/bmcDevice/BmcDeviceApi\";\nimport { Cookies, useCookies } from \"react-cookie\";\nimport SelectBox from \"../../../components/selectBox/SelectBox\";\nimport { SetSelectBoxOptions, SetSelectBoxPageOptions } from \"../../../utils/Utilities\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\nimport ButtonSecondary from \"../../../components/buttons/ButtonSecondary\";\nimport { getSearchedBmcListByUserId, getSearchedUnjoinedBmcList, getSearchedUserList, getUnjoinedBmcList, updateUserBmcAuth } from \"../../../apis/user/AdminApi\";\nimport EditUserRoleModalBmcList from \"./EditUserRoleModalBmcList\";\nimport TitleContentTemplate from \"../../../components/text/TitleContentTemplate\";\n\nconst EditUserRoleModal\n\t= (props) => {\n\t\tconst { visible, setVisible, vendorOptions, boaGroupOptions, userId, callBack } = props;\n\t\tconst dispatch = useDispatch();\n\t\tconst userInfo = useSelector((state) => state.selectedUserInfo);\n\t\tconst [cookies, setCookie] = useCookies([\"roleName\"]);\n\n\t\tconst [selectedIds, setSelectedIds] = useState([]);\n\t\tconst [list, setList] = useState();\n\n\t\t// selectBox Options\n\t\tconst [authRoleSelectedBoxOption, setAuthRoleSelectedBoxOption] = useState([\"Admin\", \"User\"]);\n\t\tconst [vendorSelectBoxOption, setVendorSelectBoxOption] = useState(vendorOptions);\n\t\tconst [boaGroupSelectBoxOption, setBoaGroupSelectBoxOption] = useState(boaGroupOptions);\n\t\tconst [selectedAuthRole, setSelectedAuthRole] = useState(0);\n\t\tconst [selectedVendor, setSelectedVendor] = useState(0);\n\t\tconst [selectedBoaGroup, setSelectedBoaGroup] = useState(0);\n\n\n\n\t\tuseEffect(() => {\n\t\t\tconst roleName = cookies.roleName;\n\t\t\tconsole.log(roleName)\n\t\t\tsetSelectedAuthRole(roleName);\n\t\t\tinitList();\n\t\t}, []);\n\n\t\tconst initList = () => {\n\t\t\ttry {\n\t\t\t\treturn getUnjoinedBmcList({ userId: userId })\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t// setVendorSelectBoxOption(data.vendor)\n\t\t\t\t\t\t// setBoaGroupSelectBoxOption(data.boa_name)\n\t\t\t\t\t\tsetList(data.unjoin_bmc)\n\t\t\t\t\t\tconsole.log(data.unjoin_bmc)\n\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t\t}\n\t\t}\n\n\t\t//UnJoin BMC서버 리스트 검색 조회\n\t\tconst getSearchedList = () => {\n\t\t\tconsole.log(\"getSearchedList\", selectedVendor, selectedBoaGroup, userId)\n\t\t\ttry {\n\t\t\t\treturn getSearchedUnjoinedBmcList({\n\t\t\t\t\tuserId: userId,\n\t\t\t\t\tvendor: selectedVendor,\n\t\t\t\t\tboa: selectedBoaGroup,\n\t\t\t\t}).then((data) => {\n\t\t\t\t\tconsole.log(data.unjoin_bmc)\n\t\t\t\t\tsetList(data.unjoin_bmc)\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t\t}\n\t\t};\n\n\n\n\t\tconst updateRequest = () => {\n\t\t\tconst isVaild = selectedIds.length > 0 && selectedAuthRole !== \"0\" && userId\n\t\t\tconsole.log(selectedIds, userId, selectedAuthRole, isVaild)\n\t\t\tif (isVaild) {\n\t\t\t\tupdateUserBmcAuth({\n\t\t\t\t\tuserId: userId,\n\t\t\t\t\tbmcUUIDList: selectedIds,\n\t\t\t\t\tauthorization: selectedAuthRole\n\t\t\t\t}).then(async (response) => {\n\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"권한설정 완료\", msg: \"BMC서버권한 설정을 완료하였습니다.\" } });\n\t\t\t\t\t\tcallBack()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"BMC서버권한 설정에 실패하였습니다.\" } });\n\t\t\t\t\t}\n\t\t\t\t\tsetVisible(false)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 에러\", msg: \"BMC서버권한 설정에 문제가 있습니다.\" } });\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"항목을 모두 작성해 주세요\" } });\n\t\t\t}\n\t\t}\n\n\t\tconst selectId = (id) => {\n\t\t\tsetSelectedIds([...selectedIds, id]);\n\t\t};\n\n\t\tconst unselectId = (id) => {\n\t\t\tsetSelectedIds(selectedIds.filter((number) => number !== id));\n\t\t};\n\n\t\tconst selectAll = () => {\n\t\t\tconst allIds = list.map((item) => item.number);\n\t\t\tsetSelectedIds([...selectedIds, ...allIds]);\n\t\t};\n\n\t\tconst unselectAll = () => {\n\t\t\tsetSelectedIds([]);\n\t\t};\n\n\t\tconst clearAndClose = () => {\n\t\t\t// setBmcName(\"\");\n\t\t\t// setBmcIP(\"\");\n\t\t\t// setBmcUser(\"\");\n\t\t\t// setBmcPassword(\"\");\n\t\t\tsetVisible(false);\n\t\t}\n\n\t\treturn (\n\n\t\t\t< CModal\n\t\t\t\tsize=\"xl\"\n\t\t\t\talignment=\"center\"\n\t\t\t\tvisible={visible}\n\t\t\t\tonClose={() => { clearAndClose() }}\n\t\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t\t<CModalHeader>\n\t\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">사용자 권한 설정</CModalTitle>\n\t\t\t\t</CModalHeader>\n\t\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t\t<CForm>\n\n\n\t\t\t\t\t\t<CRow className=\"mb-4 justify-content-between\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t<CCol className=\"d-flex col-8\">\n\t\t\t\t\t\t\t\t<TitleContentTemplate title=\"성명\" value={userInfo.name} col={2} />\n\t\t\t\t\t\t\t\t<TitleContentTemplate title=\"이메일\" value={userInfo.email} col={2} />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t<CCol className=\"d-flex col-2\">\n\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(authRoleSelectedBoxOption, \"권한설정\")}\n\t\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedAuthRole(value)}\n\t\t\t\t\t\t\t\t\tinitValue={\"User\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\n\n\t\t\t\t\t\t<CRow className=\"d-flex align-item-center justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\n\t\t\t\t\t\t\t<CRow className=\"justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(vendorSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedVendor(value)} />\n\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(boaGroupSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedBoaGroup(value)} />\n\t\t\t\t\t\t\t\t<CCol>\n\t\t\t\t\t\t\t\t\t<ButtonPrimary\n\t\t\t\t\t\t\t\t\t\ttext=\"검색\"\n\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\tgetSearchedList()\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CForm>\n\t\t\t\t\t<EditUserRoleModalBmcList\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tselectId={selectId}\n\t\t\t\t\t\tunselectId={unselectId}\n\t\t\t\t\t\tselectAll={selectAll}\n\t\t\t\t\t\tunselectAll={unselectAll}\n\t\t\t\t\t// resetCheckbox={resetCheckbox}\n\t\t\t\t\t/>\n\t\t\t\t</CModalBody>\n\t\t\t\t<CModalFooter>\n\t\t\t\t\t<div className=\"d-flex col-6 mx-auto\">\n\t\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t\t<ButtonPrimary text=\"수정\" onClick={() => { updateRequest() }} />\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t\t<ButtonSecondary text=\"취소\" onClick={() => { clearAndClose() }} />\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t</div>\n\t\t\t\t</CModalFooter>\n\t\t\t</CModal >\n\t\t)\n\t}\n\n\nexport default EditUserRoleModal","import React, { useState, useEffect } from \"react\";\nimport { CCard, CCardBody, CCol, CRow, CCardTitle, CFormLabel, CFormInput } from \"@coreui/react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport SelectBox from \"../../../components/selectBox/SelectBox\";\nimport ButtonOutLine from \"../../../components/buttons/ButtonOutline\";\nimport { SetSelectBoxOptions, SetSelectBoxPageOptions } from \"../../../utils/Utilities\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\nimport UserRoleManagementList from \"./UserRoleManagementList\";\nimport { deleteBmcAuthByUserId, getBmcListByUserId, getSearchedBmcListByUserId } from \"../../../apis/user/AdminApi\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ButtonSecondary from \"../../../components/buttons/ButtonSecondary\";\nimport EditUserRoleModal from \"./EditUserRoleModal\";\n\n\nconst UserRoleManagementMain = () => {\n\tconst { userId } = useParams();\n\n\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\n\t// 조회 관련 변수\n\tconst [selectedIds, setSelectedIds] = useState([]);\n\tconst [list, setList] = useState();\n\tconst [totalPage, setTotalPage] = useState();\n\n\t// 페이지네이션\n\tconst [selectBoxReload, setSelectBoxReload] = useState(false);\n\n\t// selectBox Options\n\tconst [vendorSelectBoxOption, setVendorSelectBoxOption] = useState([]);\n\tconst [boaGroupSelectBoxOption, setBoaGroupSelectBoxOption] = useState([]);\n\tconst [selectedVendor, setSelectedVendor] = useState(0);\n\tconst [selectedBoaGroup, setSelectedBoaGroup] = useState(0);\n\n\t//그리스 셀렉션 초기화\n\tconst [resetCheckbox, setResetCheckbox] = useState(false);\n\n\t//권한 수정 팝업\n\tconst [roleModalVisible, setRoleModalVisible] = useState(false);\n\n\tuseEffect(() => {\n\t\tinitList(1);\n\t}, []);\n\n\tconst initList = (page) => {\n\t\ttry {\n\t\t\treturn getBmcListByUserId({ userId: userId, page: page })\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetVendorSelectBoxOption(data.vendor)\n\t\t\t\t\tsetBoaGroupSelectBoxOption(data.boa_name)\n\t\t\t\t\tsetList(data.user_auth)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t}\n\n\t//BMC서버 리스트 조회\n\tconst getList = ({ isRefresh, page }) => {\n\t\ttry {\n\t\t\treturn getBmcListByUserId({\n\t\t\t\tuserId: userId,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.user_auth)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetResetCheckbox(!resetCheckbox)\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t//BMC서버 리스트 검색 조회\n\tconst getSearchedList = ({ isRefresh, page }) => {\n\t\tconsole.log(\"getSearchedList\")\n\t\ttry {\n\t\t\treturn getSearchedBmcListByUserId({\n\t\t\t\tuserId: userId,\n\t\t\t\tvendor: selectedVendor,\n\t\t\t\tboa: selectedBoaGroup,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.user_auth)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t// 초기화\n\tconst reloadData = async () => {\n\t\ttry {\n\t\t\tsetResetCheckbox(!resetCheckbox)\n\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\tconst selectId = (id) => {\n\t\tsetSelectedIds([...selectedIds, id]);\n\t};\n\n\tconst unselectId = (id) => {\n\t\tsetSelectedIds(selectedIds.filter((number) => number !== id));\n\t};\n\n\tconst selectAll = () => {\n\t\tconst allIds = list.map((item) => item.number);\n\t\tsetSelectedIds([...selectedIds, ...allIds]);\n\t};\n\n\tconst unselectAll = () => {\n\t\tsetSelectedIds([]);\n\t};\n\n\tconst onClickEdit = () => {\n\t\tsetRoleModalVisible(true)\n\t}\n\t//Bmc서버권한 삭제 요청\n\tconst onClickDelete = async () => {\n\t\tif (selectedIds.length > 0) {\n\t\t\tdispatch({\n\t\t\t\ttype: \"modal\",\n\t\t\t\tshowConfirmModal: {\n\t\t\t\t\tisShow: true,\n\t\t\t\t\ttitle: \"BMC서버권한 삭제 확인\",\n\t\t\t\t\tmsg: `${selectedIds.length}개의 BMC서버권한을 삭제하시겠습니까?`,\n\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\tdeleteBmcAuthByUserId({ userId: userId, bmcUUID: selectedIds }).then((response) => {\n\t\t\t\t\t\t\tif (response) {\n\t\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"삭제 완료\", msg: \"BMC서버권한을 삭제하였습니다.\" } });\n\t\t\t\t\t\t\t\treloadData()\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"삭제에 실패하였습니다.\" } });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: \"modal\",\n\t\t\t\tshowAlertModal: {\n\t\t\t\t\tisShow: true,\n\t\t\t\t\ttitle: \"BMC서버 권한삭제 확인\",\n\t\t\t\t\tmsg: \"권한을 삭제할 서버를 선택해 주세요\"\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CRow className=\"d-flex justify-content-center align-item-center\">\n\t\t\t\t<CCard className=\"d-flex mb-3\">\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t<CRow className=\"align-item-center justify-content-start mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t<CCol><ButtonSecondary text=\"뒤로\" onClick={() => navigate('/admin/manage-user')} /></CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<div className=\"d-flex align-item-center mb-3\">\n\t\t\t\t\t\t\t<CCardTitle style={{ fontWeight: \"bold\" }}>사용자 권한 관리</CCardTitle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<hr\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\t\theight: 10,\n\t\t\t\t\t\t\t\tmarginTop: 3,\n\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CRow className=\"d-flex align-item-center justify-content-between mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t<CRow className=\"justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t\t<CCol className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<CFormLabel className=\"col-form-label me-2 col-3\">\n\t\t\t\t\t\t\t\t\t\tUser ID\n\t\t\t\t\t\t\t\t\t</CFormLabel>\n\t\t\t\t\t\t\t\t\t<CFormInput type=\"text\" id=\"User ID\" value={userId} readOnly={true} />\n\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t\t<CCol>\n\t\t\t\t\t\t\t\t\t<ButtonPrimary text=\"권한수정\" onClick={onClickEdit} />\n\t\t\t\t\t\t\t\t</CCol>\n\n\t\t\t\t\t\t\t</CRow>\n\n\t\t\t\t\t\t\t<CRow className=\"justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(vendorSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedVendor(value)} />\n\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(boaGroupSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedBoaGroup(value)} />\n\t\t\t\t\t\t\t\t<CCol>\n\t\t\t\t\t\t\t\t\t<ButtonPrimary\n\t\t\t\t\t\t\t\t\t\ttext=\"검색\"\n\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\tif (selectedVendor === 0 && selectedBoaGroup === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"\">\n\t\t\t\t\t\t\t<CCol className=\"d-flex justify-content-between\">\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<ButtonOutLine text=\"삭제\" onClick={onClickDelete} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\toptions={SetSelectBoxPageOptions(totalPage)}\n\t\t\t\t\t\t\t\t\t\treload={selectBoxReload}\n\t\t\t\t\t\t\t\t\t\tcallBack={(pageValue) => {\n\t\t\t\t\t\t\t\t\t\t\tif (selectedVendor === 0 && selectedBoaGroup === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: false, page: pageValue });\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: false, page: pageValue })\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t\t<UserRoleManagementList\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tselectId={selectId}\n\t\t\t\t\t\tunselectId={unselectId}\n\t\t\t\t\t\tselectAll={selectAll}\n\t\t\t\t\t\tunselectAll={unselectAll}\n\t\t\t\t\t\tresetCheckbox={resetCheckbox}\n\t\t\t\t\t/>\n\t\t\t\t\t<EditUserRoleModal\n\t\t\t\t\t\tvisible={roleModalVisible}\n\t\t\t\t\t\tsetVisible={setRoleModalVisible}\n\t\t\t\t\t\tvendorOptions={vendorSelectBoxOption}\n\t\t\t\t\t\tboaGroupOptions={boaGroupSelectBoxOption}\n\t\t\t\t\t\tuserId={userId}\n\t\t\t\t\t\tcallBack={reloadData}\n\t\t\t\t\t/>\n\t\t\t\t</CCard>\n\t\t\t</CRow>\n\t\t</>\n\t);\n};\n\nexport default UserRoleManagementMain;\n"],"names":["getBmcServerList","async","userId","page","props","api","get","headers","apiHeader","data","error","console","getSearchedBmcServerList","join","vendor","boaName","deleteBmcServer","bmcUUID","bodyParams","log","registerBmcServer","bmcName","bmcIP","bmcUser","bmcPassword","boaGroup","getBoaGroupList","deleteBoaGroup","boaId","registerBoaGroup","hostIp","hostPort","hostUser","hostPassword","description","getUserList","getSearchedUserList","userName","deleteUser","getBmcListByUserId","getSearchedBmcListByUserId","boa","deleteBmcAuthByUserId","getUnjoinedBmcList","getSearchedUnjoinedBmcList","updateUserBmcAuth","bmcUUIDList","authorization","text","onClick","_jsx","CButton","color","className","children","title","value","col","classString","_jsxs","CCol","sm","CFormLabel","CFormInput","type","id","readOnly","disabled","Dashboard","React","BmcServerMain","BoaGroupMain","MonitoringMain","EventLogMain","InventoryCatalogMain","UserManagementMain","UserRoleManagementMain","path","name","element","Page500","protected","Page404","exact","AppContent","getCookie","cookieArr","document","cookie","split","i","length","cookiePair","trim","decodeURIComponent","CContainer","lg","style","maxWidth","Suspense","fallback","CSpinner","Routes","routes","map","route","idx","Route","Navigate","to","replace","AppFooter","CFooter","fontSize","AppHeaderDropdown","navigate","useNavigate","cookies","setCookie","removeCookie","useCookies","CDropdown","variant","CDropdownToggle","placement","caret","CIcon","icon","cilSettings","size","CDropdownMenu","CDropdownHeader","CDropdownItem","href","e","headersCookies","Cookies","domain","remove","cilAccountLogout","AppHeader","headerRef","useRef","colorMode","setColorMode","useColorModes","dispatch","useDispatch","sidebarShow","useSelector","state","useEffect","addEventListener","current","classList","toggle","documentElement","scrollTop","CHeader","position","ref","fluid","CHeaderToggler","marginInlineStart","cilMenu","CHeaderNav","cilMoon","cilContrast","cilSun","active","as","AppSidebarNav","_ref","items","navLink","badge","indent","arguments","undefined","_Fragment","CBadge","navItem","item","index","component","rest","Component","CNavLink","NavLink","navGroup","_item$items","compact","toggler","CSidebarNav","SimpleBar","CNavItem","cilSpeedometer","customClassName","CNavGroup","cilLayers","cilScreenDesktop","cilNotes","cilStar","AppSidebar","unfoldable","sidebarUnfoldable","filteredNav","setFilteredNav","loggedInUserTabs","useState","tabInfo","parsedTabs","filtered","navigation","filter","includes","dashboard","find","filteredItems","Array","isArray","subItem","unshift","CSidebar","visible","onVisibleChange","CSidebarHeader","CSidebarBrand","CRow","CCardTitle","fontWeight","CSidebarFooter","DefaultLayout","list","selectId","unselectId","selectAll","unselectAll","resetCheckbox","setItems","headCheckStates","setHeadCheckStates","checkboxStates","setCheckboxStates","setVisible","selectedItem","setSelectedItem","forEach","Object","keys","allChecked","values","every","transformedData","check","user_id","bmc_UUID","boa_name","user_name","createdDate","created_date","_cellProps","class","scope","columns","key","label","_props","CTable","align","responsive","bordered","hover","CTableHead","CTableRow","column","CTableHeaderCell","CFormCheck","checked","onChange","isChecked","target","CTableBody","CTableDataCell","handleCheckboxChange","prevState","bmc_name","bmcIp","bmc_ip","vendorOptions","boaGroupOptions","callBack","userInfo","selectedUserInfo","selectedIds","setSelectedIds","setList","authRoleSelectedBoxOption","setAuthRoleSelectedBoxOption","vendorSelectBoxOption","setVendorSelectBoxOption","boaGroupSelectBoxOption","setBoaGroupSelectBoxOption","selectedAuthRole","setSelectedAuthRole","selectedVendor","setSelectedVendor","selectedBoaGroup","setSelectedBoaGroup","roleName","initList","then","unjoin_bmc","catch","clearAndClose","CModal","alignment","onClose","labelledby","CModalHeader","CModalTitle","CModalBody","CForm","xs","cols","TitleContentTemplate","email","SelectBox","options","SetSelectBoxOptions","initValue","ButtonPrimary","getSearchedList","EditUserRoleModalBmcList","number","allIds","CModalFooter","updateRequest","isVaild","response","showAlertModal","isShow","msg","ButtonSecondary","useParams","totalPage","setTotalPage","selectBoxReload","setSelectBoxReload","setResetCheckbox","roleModalVisible","setRoleModalVisible","user_auth","pages","getList","isRefresh","_ref2","reloadData","CCard","CCardBody","height","marginTop","onClickEdit","ButtonOutLine","showConfirmModal","onConfirm","SetSelectBoxPageOptions","reload","pageValue","UserRoleManagementList","EditUserRoleModal"],"sourceRoot":""}