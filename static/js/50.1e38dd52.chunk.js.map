{"version":3,"file":"static/js/50.1e38dd52.chunk.js","mappings":"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","sources":["apis/maintenance/Maintenance.js","components/AppIframeModal.js","views/maintenance/InventoryCatalogDetailModal.js","views/maintenance/InventoryCatalogList.js","views/maintenance/InventoryCatalogMain.js"],"sourcesContent":["// import { Cookies } from \"react-cookie\";\nimport api, { apiHeader } from \"../Instance\";\n\n\n///BMC Inventory Catalog 리스트 조회\nexport const getBmcInventoryCatalogList = async (props) => {\n\tconst { userId, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/${userId}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"inventory\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_vendor\": \"intel\",\n\t\t// \t\t\t\"fan_status\": \"critical\",\n\t\t// \t\t\t\"firmware_version\": \"v1.0\",\n\t\t// \t\t\t\"memory_status\": \"normal\",\n\t\t// \t\t\t\"psu_status\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor1\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_vendor\": \"amd\",\n\t\t// \t\t\t\"fan_status\": \"warning\",\n\t\t// \t\t\t\"firmware_version\": \"v1.1\",\n\t\t// \t\t\t\"memory_status\": \"critical\",\n\t\t// \t\t\t\"psu_status\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor2\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_vendor\": \"arm\",\n\t\t// \t\t\t\"fan_status\": \"normal\",\n\t\t// \t\t\t\"firmware_version\": \"v1.2\",\n\t\t// \t\t\t\"memory_status\": \"warning\",\n\t\t// \t\t\t\"psu_status\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor3\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BMC Inventory Catalog 리스트 조회\nexport const getSearchedBmcInventoryCatalogList = async (props) => {\n\tconst { userId, vendor, boa, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/${userId}/${vendor}/${boa}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"inventory\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_vendor\": \"intel\",\n\t\t// \t\t\t\"fan_status\": \"critical\",\n\t\t// \t\t\t\"firmware_version\": \"v1.0\",\n\t\t// \t\t\t\"memory_status\": \"normal\",\n\t\t// \t\t\t\"psu_status\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor1\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_vendor\": \"amd\",\n\t\t// \t\t\t\"fan_status\": \"warning\",\n\t\t// \t\t\t\"firmware_version\": \"v1.1\",\n\t\t// \t\t\t\"memory_status\": \"critical\",\n\t\t// \t\t\t\"psu_status\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor2\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_vendor\": \"arm\",\n\t\t// \t\t\t\"fan_status\": \"normal\",\n\t\t// \t\t\t\"firmware_version\": \"v1.2\",\n\t\t// \t\t\t\"memory_status\": \"warning\",\n\t\t// \t\t\t\"psu_status\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor3\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BMC Inventory Catalog 상세 정보 조회\nexport const getBmcInventoryCatalogDetail = async (props) => {\n\tconst { bmcUUID } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/detail/${bmcUUID}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///Power Control set 적용\nexport const updatePowerControlSet = async (props) => {\n\tconst { powerOption, bmcUUID, bmcIp } = props\n\ttry {\n\t\t// 0 : Reset Server\n\t\t// 1 : Power Off Server – Immediate\n\t\t// 2 : Power Off Server – Orderly Shutdown\n\t\t// 3 : Power On Server\n\t\t// 4 : Power Cycle Server\n\t\tconst bodyParams = {\n\t\t\t\"power_option\": powerOption,\n\t\t\t\"bmc_UUID\": bmcUUID,\n\t\t\t\"bmc_ip\": bmcIp\n\t\t}\n\t\t// const response = await api.post(`/bmc/power/set`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams);\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///Power Control set 적용\nexport const updateFanControlSet = async (props) => {\n\tconst { fanOption, bmcUUID, bmcIp } = props\n\ttry {\n\t\t// 0 : Set Fan to Standard Speed\n\t\t// 1 : Set Fan to Full Speed\n\t\t// 2 : Set Fan to Optimal Speed\n\t\t// 3 : Set Fan to HeavyIO Speed\n\t\tconst bodyParams = {\n\t\t\t\"fan_option\": fanOption,\n\t\t\t\"bmc_UUID\": bmcUUID,\n\t\t\t\"bmc_ip\": bmcIp\n\t\t}\n\t\t// const response = await api.post(`/bmc/fan/set`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams);\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n","import { CCol, CForm, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport ButtonSecondary from \"./buttons/ButtonSecondary\";\n\nconst AppIfameModal = (props) => {\n\tconst { url, visible, setVisible } = props\n\treturn (\n\t\t< CModal\n\t\t\tsize=\"xl\"\n\t\t\talignment=\"center\"\n\t\t\tvisible={visible}\n\t\t\tonClose={() => { setVisible(false) }}\n\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t<CModalHeader>\n\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">BMC서버 Console</CModalTitle>\n\t\t\t</CModalHeader>\n\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t<CForm>\n\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t<div className=\"embed-responsive embed-responsive-1by1\">\n\t\t\t\t\t\t\t{/* <iframe className=\"embed-responsive-item\" src={url} allowFullScreen></iframe> */}\n\t\t\t\t\t\t\t<iframe className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/zpOULjyy-n8?rel=0\" allowFullScreen></iframe>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CRow>\n\t\t\t\t</CForm>\n\t\t\t</CModalBody>\n\t\t\t<CModalFooter>\n\t\t\t\t<div className=\"d-flex col-12 mx-auto\">\n\t\t\t\t\t<CCol className=\"me-2 col-12\">\n\t\t\t\t\t\t<ButtonSecondary text=\"취소\" onClick={() => { setVisible(false) }} />\n\t\t\t\t\t</CCol>\n\t\t\t\t</div>\n\t\t\t</CModalFooter>\n\t\t</CModal >\n\n\n\t)\n}\n\nexport default AppIfameModal;","import { CCol, CForm, CFormInput, CFormLabel, CModal, CModalBody, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport TitleContentTemplate from \"../../components/text/TitleContentTemplate\";\nimport { getBmcInventoryCatalogDetail } from \"../../apis/maintenance/Maintenance\";\nimport { useDispatch } from \"react-redux\";\n\nconst InventoryCatalogDetailModal = (props) => {\n\tconst { bmcUUID, visible, setVisible } = props;\n\tconst dispatch = useDispatch();\n\tconst [data, setData] = useState();\n\n\tuseEffect(() => {\n\t\tif (visible) {\n\t\t\t// todo : bmcUUID로 검색했을떄 정상적인 데이터가 나오지 않음 추후 교체\n\t\t\t// getBmcInventoryCatalogDetail({ bmcUUID: bmcUUID })\n\t\t\tgetBmcInventoryCatalogDetail({ bmcUUID: \"UUID_1\" })\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\tif (response.inventory_detail.length === 0) {\n\t\t\t\t\t\tsetVisible(false)\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"상세 데이터가 없습니다.\" } });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetData(response.inventory_detail[0])\n\t\t\t\t\t}\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"InventoryCatalogDetail Error\", msg: \"InventoryCatalogDetail에 문제가 있습니다. 확인해주세요\" } });\n\t\t\t\t});\n\t\t}\n\t}, [visible])\n\n\treturn (\n\t\tdata ?\n\t\t\t< CModal\n\t\t\t\tsize=\"xl\"\n\t\t\t\talignment=\"center\"\n\t\t\t\tvisible={visible}\n\t\t\t\tonClose={() => { setVisible(false) }}\n\t\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t\t<CModalHeader>\n\t\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">BMC Inventory Catalog Detail</CModalTitle>\n\t\t\t\t</CModalHeader>\n\t\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t\t<CForm>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"System ID\" value={bmcUUID} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Serial Number\" value={data.serial_num} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Firmware Version\" value={data.firmware_version} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Model\" value={data.model} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BIOS Version\" value={data.bios_version} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BMC MAC Address\" value={data.mac_address} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BIOS Build Time\" value={data.bios_build_time} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Power State\" value={data.power_status} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CForm>\n\t\t\t\t</CModalBody>\n\n\t\t\t</CModal > : <></>\n\t)\n}\n\n\nexport default InventoryCatalogDetailModal;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tCTable,\n\tCTableBody,\n\tCTableDataCell,\n\tCTableHead,\n\tCTableHeaderCell,\n\tCTableRow,\n} from \"@coreui/react\";\nimport ButtonPrimary from \"../../components/buttons/ButtonPrimary\";\nimport AppIfameModal from \"../../components/AppIframeModal\";\nimport InventoryCatalogDetailModal from \"./InventoryCatalogDetailModal\";\n\n\nconst InventoryCatalogList = ({ list }) => {\n\tconst [items, setItems] = useState();\n\tconst [visible, setVisible] = useState(false);\n\tconst [selectedItem, setSelectedItem] = useState({});\n\tconst [consoleModalVisible, setConsoleModalVisible] = useState();\n\n\tconst showDetailPopup = (bmcUUID) => {\n\t\tsetSelectedItem({ bmcUUID: bmcUUID })\n\t\tsetVisible(true);\n\t}\n\n\tconst showConsolePopup = (bmcIp) => {\n\t\tsetSelectedItem({ bmcIp: bmcIp })\n\t\tsetConsoleModalVisible(true);\n\t}\n\n\tuseEffect(() => {\n\t\tif (list) {\n\t\t\tconst transformedData = list.map((item) => ({\n\t\t\t\tcheck: \"\",\n\t\t\t\tbmcUUID: item.bmc_UUID,\n\t\t\t\tbmcName: item.bmc_name,\n\t\t\t\tboaName: item.boa_name,\n\t\t\t\tvendor: item.vendor,\n\t\t\t\tcpuVendor: item.cpu_vendor,\n\t\t\t\tmemoryStatus: item.memory_status,\n\t\t\t\tfanStatus: item.fan_status,\n\t\t\t\tfirmwareVersion: item.firmware_version,\n\t\t\t\tpsuStatus: item.psu_status,\n\t\t\t\t_cellProps: { class: { scope: \"row\" } },\n\t\t\t}));\n\t\t\tsetItems(transformedData);\n\t\t}\n\t}, [list]);\n\n\n\n\tconst columns = [\n\t\t{ key: \"bmc_UUID\", label: \"서버ID\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_name\", label: \"서버명\", _props: { scope: \"col\" } },\n\t\t{ key: \"boa_name\", label: \"그룹\", _props: { scope: \"col\" } },\n\t\t{ key: \"vendor\", label: \"벤더\", _props: { scope: \"col\" } },\n\t\t{ key: \"cpu_vendor\", label: \"CPU\", _props: { scope: \"col\" } },\n\t\t{ key: \"memory_status\", label: \"Memory\", _props: { scope: \"col\" } },\n\t\t{ key: \"psu_status\", label: \"Power Supply\", _props: { scope: \"col\" } },\n\t\t{ key: \"fan_status\", label: \"FAN\", _props: { scope: \"col\" } },\n\t\t{ key: \"firmware_version\", label: \"Firmware\", _props: { scope: \"col\" } },\n\t\t{ key: \"console\", label: \"Console\", _props: { scope: \"col\" } },\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<CTable align=\"middle\" responsive bordered={true} hover={true}>\n\t\t\t\t<CTableHead align=\"middle\" color=\"primary\">\n\t\t\t\t\t<CTableRow>\n\t\t\t\t\t\t{columns?.map((column, key) => (\n\t\t\t\t\t\t\t<CTableHeaderCell key={key}>\n\t\t\t\t\t\t\t\t&nbsp; {column.label}\n\t\t\t\t\t\t\t</CTableHeaderCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CTableRow>\n\t\t\t\t</CTableHead>\n\n\t\t\t\t<CTableBody align=\"middle\">\n\t\t\t\t\t{items?.map((item, key) => (\n\t\t\t\t\t\t<CTableRow key={key}>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<Link onClick={() => showDetailPopup(item.bmcUUID, item.bmcIp)}>\n\t\t\t\t\t\t\t\t\t{item.bmcUUID}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.boaName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.vendor}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.cpuVendor}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.memoryStatus}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.psuStatus}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.fanStatus}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.firmwareVersion}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<div className=\"me-2 ms-2 mt-1 mb-1\">\n\t\t\t\t\t\t\t\t\t<ButtonPrimary text=\"console\" onClick={() => { showConsolePopup(item.bmcIp) }} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t</CTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</CTableBody>\n\t\t\t</CTable>\n\t\t\t<InventoryCatalogDetailModal\n\t\t\t\tvisible={visible}\n\t\t\t\tsetVisible={setVisible}\n\t\t\t\tbmcUUID={selectedItem.bmcUUID}\n\t\t\t/>\n\t\t\t<AppIfameModal\n\t\t\t\turl={`http://${selectedItem.bmcIp}`}\n\t\t\t\tvisible={consoleModalVisible}\n\t\t\t\tsetVisible={setConsoleModalVisible}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default InventoryCatalogList;\n","import React, { useState, useEffect } from \"react\";\nimport { CCard, CCardBody, CCol, CRow, CCardTitle } from \"@coreui/react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useCookies } from \"react-cookie\";\nimport { SetSelectBoxOptions, SetSelectBoxPageOptions } from \"../../utils/Utilities\";\nimport SelectBox from \"../../components/selectBox/SelectBox\";\nimport ButtonPrimary from \"../../components/buttons/ButtonPrimary\";\nimport { getBmcInventoryCatalogList, getSearchedBmcInventoryCatalogList } from \"../../apis/maintenance/Maintenance\";\nimport InventoryCatalogList from \"./InventoryCatalogList\";\n\nconst InventoryCatalogMain = () => {\n\tconst [cookies] = useCookies([\"userId\"]);\n\tvar userId = `${cookies.userId}`\n\n\n\t// 조회 관련 변수\n\t// const [selectedIds, setSelectedIds] = useState([]);\n\tconst [list, setList] = useState();\n\tconst [totalPage, setTotalPage] = useState();\n\n\t// 페이지네이션\n\tconst [selectBoxReload, setSelectBoxReload] = useState(false);\n\n\t// selectBox Options\n\tconst [vendorSelectBoxOption, setVendorSelectBoxOption] = useState([]);\n\tconst [boaGroupSelectBoxOption, setBoaGroupSelectBoxOption] = useState([]);\n\tconst [selectedVendor, setSelectedVendor] = useState(0);\n\tconst [selectedBoaGroup, setSelectedBoaGroup] = useState(0);\n\n\tuseEffect(() => {\n\t\tinitList(1);\n\t}, []);\n\n\tconst initList = (page) => {\n\t\ttry {\n\t\t\treturn getBmcInventoryCatalogList({ userId: userId, page: page })\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetVendorSelectBoxOption(data.vendor)\n\t\t\t\t\tsetBoaGroupSelectBoxOption(data.boa_name)\n\t\t\t\t\tsetList(data.inventory)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t}\n\n\t//모니터링 BMC서버 리스트 조회\n\tconst getList = ({ isRefresh, page }) => {\n\t\ttry {\n\t\t\treturn getBmcInventoryCatalogList({\n\t\t\t\tuserId: userId,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.inventory)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t//모니터링 BMC서버 리스트 검색 조회\n\tconst getSearchedList = ({ isRefresh, page }) => {\n\t\ttry {\n\t\t\treturn getSearchedBmcInventoryCatalogList({\n\t\t\t\tuserId: userId,\n\t\t\t\tvendor: selectedVendor,\n\t\t\t\tboa: selectedBoaGroup,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.inventory)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t// 초기화\n\tconst reloadData = async () => {\n\t\ttry {\n\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\n\treturn (\n\t\t<>\n\t\t\t<CRow className=\"d-flex justify-content-center align-item-center\">\n\t\t\t\t<CCard className=\"d-flex mb-3\">\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t<CCardTitle style={{ fontWeight: \"bold\" }}>BMC Inventory Catalog</CCardTitle>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<CRow className=\"justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(vendorSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedVendor(value)} />\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(boaGroupSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedBoaGroup(value)} />\n\t\t\t\t\t\t\t<CCol>\n\t\t\t\t\t\t\t\t<ButtonPrimary\n\t\t\t\t\t\t\t\t\ttext=\"검색\"\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tif (selectedVendor === \"0\" && selectedBoaGroup === \"0\") {\n\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t<CCol className=\"d-flex justify-content-end\">\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\toptions={SetSelectBoxPageOptions(totalPage)}\n\t\t\t\t\t\t\t\t\t\treload={selectBoxReload}\n\t\t\t\t\t\t\t\t\t\tcallBack={(pageValue) => {\n\t\t\t\t\t\t\t\t\t\t\t// if ([selectedVendor, selectedBoaGroup, selectedBoaGroup, selectedPower].every((element) => element === 0)) {\n\t\t\t\t\t\t\t\t\t\t\tif (selectedVendor === \"0\" && selectedBoaGroup === \"0\") {\n\t\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: false, page: pageValue });\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: false, page: pageValue })\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t\t<InventoryCatalogList\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tcallback={reloadData}\n\t\t\t\t\t/>\n\t\t\t\t</CCard>\n\t\t\t</CRow>\n\t\t</>\n\t);\n};\n\nexport default InventoryCatalogMain;\n"],"names":["getBmcInventoryCatalogList","async","userId","page","props","api","get","headers","apiHeader","data","error","console","getSearchedBmcInventoryCatalogList","vendor","boa","getBmcInventoryCatalogDetail","bmcUUID","updatePowerControlSet","powerOption","bmcIp","bodyParams","log","updateFanControlSet","fanOption","url","visible","setVisible","_jsxs","CModal","size","alignment","onClose","labelledby","children","_jsx","CModalHeader","CModalTitle","id","CModalBody","className","CForm","CRow","src","allowFullScreen","CModalFooter","CCol","ButtonSecondary","text","onClick","dispatch","useDispatch","setData","useState","useEffect","then","response","inventory_detail","length","type","showAlertModal","isShow","title","msg","catch","TitleContentTemplate","value","serial_num","firmware_version","model","bios_version","mac_address","bios_build_time","power_status","_Fragment","_ref","list","items","setItems","selectedItem","setSelectedItem","consoleModalVisible","setConsoleModalVisible","transformedData","map","item","check","bmc_UUID","bmcName","bmc_name","boaName","boa_name","cpuVendor","cpu_vendor","memoryStatus","memory_status","fanStatus","fan_status","firmwareVersion","psuStatus","psu_status","_cellProps","class","scope","columns","key","label","_props","CTable","align","responsive","bordered","hover","CTableHead","color","CTableRow","column","CTableHeaderCell","CTableBody","CTableDataCell","Link","showDetailPopup","ButtonPrimary","InventoryCatalogDetailModal","AppIfameModal","InventoryCatalogMain","cookies","useCookies","setList","totalPage","setTotalPage","selectBoxReload","setSelectBoxReload","vendorSelectBoxOption","setVendorSelectBoxOption","boaGroupSelectBoxOption","setBoaGroupSelectBoxOption","selectedVendor","setSelectedVendor","selectedBoaGroup","setSelectedBoaGroup","initList","inventory","pages","getList","isRefresh","getSearchedList","_ref2","CCard","CCardBody","CCardTitle","style","fontWeight","xs","cols","SelectBox","options","SetSelectBoxOptions","callBack","SetSelectBoxPageOptions","reload","pageValue","InventoryCatalogList","callback"],"sourceRoot":""}