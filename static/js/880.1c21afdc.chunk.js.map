{"version":3,"file":"static/js/880.1c21afdc.chunk.js","mappings":"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","sources":["apis/maintenance/Maintenance.js","views/bmcDevices/bmcServer/BmcServerList.js","views/bmcDevices/bmcServer/AddBmcServerModal.js","views/bmcDevices/bmcServer/BmcServerMain.js","views/maintenance/InventoryCatalogDetailModal.js"],"sourcesContent":["// import { Cookies } from \"react-cookie\";\nimport api, { apiHeader } from \"../Instance\";\n\n\n///BMC Inventory Catalog 리스트 조회\nexport const getBmcInventoryCatalogList = async (props) => {\n\tconst { userId, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/${userId}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"inventory\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_vendor\": \"intel\",\n\t\t// \t\t\t\"fan_status\": \"critical\",\n\t\t// \t\t\t\"firmware_version\": \"v1.0\",\n\t\t// \t\t\t\"memory_status\": \"normal\",\n\t\t// \t\t\t\"psu_status\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor1\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_vendor\": \"amd\",\n\t\t// \t\t\t\"fan_status\": \"warning\",\n\t\t// \t\t\t\"firmware_version\": \"v1.1\",\n\t\t// \t\t\t\"memory_status\": \"critical\",\n\t\t// \t\t\t\"psu_status\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor2\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_vendor\": \"arm\",\n\t\t// \t\t\t\"fan_status\": \"normal\",\n\t\t// \t\t\t\"firmware_version\": \"v1.2\",\n\t\t// \t\t\t\"memory_status\": \"warning\",\n\t\t// \t\t\t\"psu_status\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor3\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BMC Inventory Catalog 리스트 조회\nexport const getSearchedBmcInventoryCatalogList = async (props) => {\n\tconst { userId, vendor, boa, page } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/${userId}/${vendor}/${boa}/${page}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\t// {\n\t\t// \t\"inventory\": [\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_1\",\n\t\t// \t\t\t\"bmc_name\": \"BMC1\",\n\t\t// \t\t\t\"boa_name\": \"BOA1\",\n\t\t// \t\t\t\"cpu_vendor\": \"intel\",\n\t\t// \t\t\t\"fan_status\": \"critical\",\n\t\t// \t\t\t\"firmware_version\": \"v1.0\",\n\t\t// \t\t\t\"memory_status\": \"normal\",\n\t\t// \t\t\t\"psu_status\": \"warning\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor1\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_2\",\n\t\t// \t\t\t\"bmc_name\": \"BMC2\",\n\t\t// \t\t\t\"boa_name\": \"BOA2\",\n\t\t// \t\t\t\"cpu_vendor\": \"amd\",\n\t\t// \t\t\t\"fan_status\": \"warning\",\n\t\t// \t\t\t\"firmware_version\": \"v1.1\",\n\t\t// \t\t\t\"memory_status\": \"critical\",\n\t\t// \t\t\t\"psu_status\": \"normal\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor2\"\n\t\t// \t\t},\n\t\t// \t\t{\n\t\t// \t\t\t\"bmc_UUID\": \"UUID_3\",\n\t\t// \t\t\t\"bmc_name\": \"BMC3\",\n\t\t// \t\t\t\"boa_name\": \"BOA3\",\n\t\t// \t\t\t\"cpu_vendor\": \"arm\",\n\t\t// \t\t\t\"fan_status\": \"normal\",\n\t\t// \t\t\t\"firmware_version\": \"v1.2\",\n\t\t// \t\t\t\"memory_status\": \"warning\",\n\t\t// \t\t\t\"psu_status\": \"critical\",\n\t\t// \t\t\t\"user_id\": \"user_1\",\n\t\t// \t\t\t\"vendor\": \"Vendor3\"\n\t\t// \t\t},]\n\t\t// }\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///BMC Inventory Catalog 상세 정보 조회\nexport const getBmcInventoryCatalogDetail = async (props) => {\n\tconst { bmcUUID } = props\n\ttry {\n\t\tconst response = await api.get(`/bmc/inventory/detail/${bmcUUID}`, {\n\t\t\theaders: apiHeader(),\n\t\t});\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///Power Control set 적용\nexport const updatePowerControlSet = async (props) => {\n\tconst { powerOption, bmcUUID, bmcIp } = props\n\ttry {\n\t\t// 0 : Reset Server\n\t\t// 1 : Power Off Server – Immediate\n\t\t// 2 : Power Off Server – Orderly Shutdown\n\t\t// 3 : Power On Server\n\t\t// 4 : Power Cycle Server\n\t\tconst bodyParams = {\n\t\t\t\"power_option\": powerOption,\n\t\t\t\"bmc_UUID\": bmcUUID,\n\t\t\t\"bmc_ip\": bmcIp\n\t\t}\n\t\t// const response = await api.post(`/bmc/power/set`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams);\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n///Power Control set 적용\nexport const updateFanControlSet = async (props) => {\n\tconst { fanOption, bmcUUID, bmcIp } = props\n\ttry {\n\t\t// 0 : Set Fan to Standard Speed\n\t\t// 1 : Set Fan to Full Speed\n\t\t// 2 : Set Fan to Optimal Speed\n\t\t// 3 : Set Fan to HeavyIO Speed\n\t\tconst bodyParams = {\n\t\t\t\"fan_option\": fanOption,\n\t\t\t\"bmc_UUID\": bmcUUID,\n\t\t\t\"bmc_ip\": bmcIp\n\t\t}\n\t\t// const response = await api.post(`/bmc/fan/set`, {\n\t\t// \tbodyParams,\n\t\t// \theaders: apiHeader(),\n\t\t// });\n\t\t// return response.status === 200;\n\t\tconsole.log(bodyParams);\n\t\treturn true;\n\t} catch (error) {\n\t\tconsole.error(\"Error fetching data:\", error);\n\t}\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tCFormCheck,\n\tCTable,\n\tCTableBody,\n\tCTableDataCell,\n\tCTableHead,\n\tCTableHeaderCell,\n\tCTableRow,\n} from \"@coreui/react\";\nimport InventoryCatalogDetailModal from \"../../maintenance/InventoryCatalogDetailModal\";\n\nconst BmcServerList = ({\n\tlist,\n\tselectId,\n\tunselectId,\n\tselectAll,\n\tunselectAll,\n\tresetCheckbox,\n}) => {\n\tconst [items, setItems] = useState();\n\tconst [headCheckStates, setHeadCheckStates] = useState(false);\n\tconst [checkboxStates, setCheckboxStates] = useState({});\n\tconst [visible, setVisible] = useState(false);\n\tconst [selectedItem, setSelectedItem] = useState();\n\n\tconst handleCheckboxChange = (id, isChecked) => {\n\t\tsetCheckboxStates((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[id]: isChecked,\n\t\t}));\n\t};\n\n\tuseEffect(() => {\n\t\tsetHeadCheckStates(false)\n\t\tif (items) {\n\t\t\titems.forEach((item) => {\n\t\t\t\tcheckboxStates[item.bmcUUID] = false;\n\t\t\t});\n\t\t}\n\t\tunselectAll();\n\t}, [resetCheckbox])\n\n\tconst showDetailPopup = (bmcUUID) => {\n\t\tsetSelectedItem(bmcUUID)\n\t\tsetVisible(true);\n\t}\n\n\n\tuseEffect(() => {\n\t\t// checkboxStates가 초기 상태({})인 경우 실행하지 않음\n\t\tif (Object.keys(checkboxStates).length === 0) return;\n\n\t\t// 모든 id가 true인지 확인\n\t\tconst allChecked = Object.values(checkboxStates).every((value) => value);\n\n\t\tif (allChecked) {\n\t\t\t// 모든 id가 true일 때 실행할 코드\n\t\t\tsetHeadCheckStates(true);\n\t\t} else {\n\t\t\tsetHeadCheckStates(false);\n\t\t}\n\t}, [checkboxStates]); // checkboxStates가 변경될 때마다 useEffect 실행\n\n\tuseEffect(() => {\n\t\tif (list) {\n\t\t\tconst transformedData = list.map((item) => ({\n\t\t\t\tcheck: \"\",\n\t\t\t\tbmcUUID: item.bmc_UUID,\n\t\t\t\tbmcName: item.bmc_name,\n\t\t\t\tboaName: item.boa_name,\n\t\t\t\tvendor: item.vendor,\n\t\t\t\tbmcIp: item.bmc_ip,\n\t\t\t\tversion: item.version,\n\t\t\t\tjoinState: item.join_state,\n\t\t\t\tjoinDate: item.join_date,\n\t\t\t\t_cellProps: { class: { scope: \"row\" } },\n\t\t\t}));\n\t\t\tsetItems(transformedData);\n\t\t}\n\t}, [list]);\n\n\n\n\tconst columns = [\n\t\t{ key: \"check\", label: \"선택\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_UUID\", label: \"서버ID\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_name\", label: \"서버명\", _props: { scope: \"col\" } },\n\t\t{ key: \"boa_name\", label: \"그룹\", _props: { scope: \"col\" } },\n\t\t{ key: \"vendor\", label: \"벤더\", _props: { scope: \"col\" } },\n\t\t{ key: \"bmc_ip\", label: \"IP\", _props: { scope: \"col\" } },\n\t\t{ key: \"version\", label: \"버전\", _props: { scope: \"col\" } },\n\t\t{ key: \"join_state\", label: \"등록상태\", _props: { scope: \"col\" } },\n\t\t{ key: \"join_date\", label: \"등록일\", _props: { scope: \"col\" } },\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<CTable align=\"middle\" responsive bordered={true} hover={true}>\n\t\t\t\t<CTableHead align=\"middle\" color=\"primary\">\n\t\t\t\t\t<CTableRow>\n\t\t\t\t\t\t{columns?.map((column, key) => (\n\t\t\t\t\t\t\t<CTableHeaderCell key={key}>\n\t\t\t\t\t\t\t\t{column.label == \"선택\" ? (\n\t\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\t\tchecked={headCheckStates || false}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\t\tsetHeadCheckStates(isChecked);\n\t\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.bmcUUID] = true;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tselectAll();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.bmcUUID] = false;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tunselectAll();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t&nbsp; {column.label}\n\t\t\t\t\t\t\t</CTableHeaderCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CTableRow>\n\t\t\t\t</CTableHead>\n\n\t\t\t\t<CTableBody align=\"middle\">\n\t\t\t\t\t{items?.map((item, key) => (\n\t\t\t\t\t\t<CTableRow key={key}>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tid={`gridCheck-${item.bmcUUID}`}\n\t\t\t\t\t\t\t\t\tchecked={checkboxStates[item.bmcUUID] || false}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\thandleCheckboxChange(item.bmcUUID, isChecked);\n\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\tselectId(item.bmcUUID);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tunselectId(item.bmcUUID);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<Link onClick={() => showDetailPopup(item.bmcUUID)}>\n\t\t\t\t\t\t\t\t\t{item.bmcUUID}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.boaName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.vendor}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.bmcIp}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.version}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.joinState}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.joinDate}</CTableDataCell>\n\t\t\t\t\t\t</CTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</CTableBody>\n\t\t\t</CTable>\n\t\t\t<InventoryCatalogDetailModal\n\t\t\t\tvisible={visible}\n\t\t\t\tsetVisible={setVisible}\n\t\t\t\tbmcUUID={selectedItem}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default BmcServerList;\n","import { CCol, CForm, CFormLabel, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport InputTitleTemplate from \"../../../components/text/InputTitleTemplate\";\nimport { registerBmcServer } from \"../../../apis/bmcDevice/BmcDeviceApi\";\nimport { Cookies } from \"react-cookie\";\nimport SelectBox from \"../../../components/selectBox/SelectBox\";\nimport { SetSelectBoxOptions } from \"../../../utils/Utilities\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\nimport ButtonSecondary from \"../../../components/buttons/ButtonSecondary\";\n\nconst AddBmcServerModal\n\t= (props) => {\n\t\tconst { visible, setVisible, vendorOptions, boaGroupOptions, callBack } = props;\n\t\tconst dispatch = useDispatch();\n\n\t\tconst [bmcName, setBmcName] = useState();\n\t\tconst [bmcIP, setBmcIP] = useState();\n\t\tconst [bmcUser, setBmcUser] = useState();\n\t\tconst [bmcPassword, setBmcPassword] = useState();\n\t\tconst [selectedVendor, setSelectedVendor] = useState(0);\n\t\tconst [selectedBoaGroup, setSelectedBoaGroup] = useState(0);\n\n\t\tconst cookies = new Cookies()\n\t\tvar userId = `${cookies.get(\"userId\")}`\n\n\t\tconst registerRequest = () => {\n\t\t\tconst isVaild = [bmcName, bmcIP, bmcUser, bmcPassword, selectedVendor, selectedBoaGroup].every(item => item)\n\t\t\tif (isVaild) {\n\t\t\t\tregisterBmcServer({\n\t\t\t\t\tuserId: userId,\n\t\t\t\t\tbmcName: bmcName,\n\t\t\t\t\tbmcIP: bmcIP,\n\t\t\t\t\tbmcUser: bmcUser,\n\t\t\t\t\tbmcPassword, bmcPassword,\n\t\t\t\t\tvendor: selectedVendor,\n\t\t\t\t\tboaGroup: selectedBoaGroup\n\t\t\t\t}).then(async (response) => {\n\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"서버 등록 완료\", msg: \"BMC서버 등록을 완료하였습니다.\" } });\n\t\t\t\t\t\tcallBack()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"서버 등록에 실패하였습니다.\" } });\n\t\t\t\t\t}\n\t\t\t\t\tsetVisible(false)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 에러\", msg: \"BMC서버등록에 문제가 있습니다. 확인해주세요\" } });\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"항목을 모두 작성해 주세요\" } });\n\t\t\t}\n\t\t\t// todo : 생성 테스트 해봐야함\n\t\t}\n\n\t\tconst clearAndClose = () => {\n\t\t\tsetBmcName(\"\");\n\t\t\tsetBmcIP(\"\");\n\t\t\tsetBmcUser(\"\");\n\t\t\tsetBmcPassword(\"\");\n\t\t\tsetVisible(false);\n\t\t}\n\n\t\treturn (\n\n\t\t\t< CModal\n\t\t\t\tsize=\"lg\"\n\t\t\t\talignment=\"center\"\n\t\t\t\tvisible={visible}\n\t\t\t\tonClose={() => { clearAndClose() }}\n\t\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t\t<CModalHeader>\n\t\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">BMC 서버 등록 요청</CModalTitle>\n\t\t\t\t</CModalHeader>\n\t\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t\t<CForm>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BMC Name\" setOnChange={setBmcName} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BMC IP\" setOnChange={setBmcIP} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BMC User\" setOnChange={setBmcUser} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BMC Password\" setOnChange={setBmcPassword} />\n\t\t\t\t\t\t</CRow>\n\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<CCol sm={6} className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t<CFormLabel className=\"col-form-label col-6 me-2\">\n\t\t\t\t\t\t\t\t\tVendor\n\t\t\t\t\t\t\t\t</CFormLabel>\n\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(vendorOptions, \"선택\")}\n\t\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedVendor(value)} />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t\t<CCol sm={6} className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t<CFormLabel className=\"col-form-label col-6 me-2\">\n\t\t\t\t\t\t\t\t\tBOA Group\n\t\t\t\t\t\t\t\t</CFormLabel>\n\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(boaGroupOptions, \"선택\")}\n\t\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedBoaGroup(value)} />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CForm>\n\t\t\t\t</CModalBody>\n\t\t\t\t<CModalFooter>\n\t\t\t\t\t<div className=\"d-flex col-6 mx-auto\">\n\t\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t\t<ButtonPrimary text=\"등록 요청\" onClick={() => { registerRequest() }} />\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t\t<ButtonSecondary text=\"취소\" onClick={() => { clearAndClose() }} />\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t</div>\n\t\t\t\t</CModalFooter>\n\t\t\t</CModal >\n\t\t)\n\t}\n\n\nexport default AddBmcServerModal\n\t;","import React, { useState, useEffect } from \"react\";\nimport { CCard, CCardBody, CCol, CRow, CCardTitle } from \"@coreui/react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { deleteBmcServer, getBmcServerList, getSearchedBmcServerList } from \"../../../apis/bmcDevice/BmcDeviceApi\";\nimport { useCookies } from \"react-cookie\";\nimport SelectBox from \"../../../components/selectBox/SelectBox\";\nimport ButtonOutLine from \"../../../components/buttons/ButtonOutline\";\nimport { SetSelectBoxOptions, SetSelectBoxPageOptions } from \"../../../utils/Utilities\";\nimport BmcServerList from \"./BmcServerList\";\nimport { useDispatch } from \"react-redux\";\nimport AddBmcServerModal from \"./AddBmcServerModal\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\n\nconst BmcServerMain = () => {\n\tconst [cookies] = useCookies([\"userId\"]);\n\tvar userId = `${cookies.userId}`\n\tconst dispatch = useDispatch();\n\n\t// 조회 관련 변수\n\tconst [selectedIds, setSelectedIds] = useState([]);\n\tconst [list, setList] = useState();\n\tconst [totalPage, setTotalPage] = useState();\n\n\t// 페이지네이션\n\tconst [selectBoxReload, setSelectBoxReload] = useState(false);\n\n\t// selectBox Options\n\tconst [joinSelectBoxOption, setJoinSelectBoxOption] = useState(['join', 'unjoin']);\n\tconst [vendorSelectBoxOption, setVendorSelectBoxOption] = useState([]);\n\tconst [boaGroupSelectBoxOption, setBoaGroupSelectBoxOption] = useState([]);\n\tconst [selectedJoin, setSelectedJoin] = useState(0);\n\tconst [selectedVendor, setSelectedVendor] = useState(0);\n\tconst [selectedBoaGroup, setSelectedBoaGroup] = useState(0);\n\n\t//그리스 셀렉션 초기화\n\tconst [resetCheckbox, setResetCheckbox] = useState(false);\n\n\t//등록요청 팝업\n\tconst [addBmcVisible, setAddBmcVisible] = useState(false);\n\n\tuseEffect(() => {\n\t\tinitList(1);\n\t}, []);\n\n\tconst initList = (page) => {\n\t\ttry {\n\t\t\treturn getBmcServerList({ userId: userId, page: page })\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetVendorSelectBoxOption(data.vendor)\n\t\t\t\t\tsetBoaGroupSelectBoxOption(data.boa)\n\t\t\t\t\tsetList(data.bmc)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t}\n\n\t//BMC서버 리스트 조회\n\tconst getList = ({ isRefresh, page }) => {\n\t\ttry {\n\t\t\treturn getBmcServerList({\n\t\t\t\tuserId: userId,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.bmc)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetResetCheckbox(!resetCheckbox)\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t//BMC서버 리스트 검색 조회\n\tconst getSearchedList = ({ isRefresh, page }) => {\n\t\ttry {\n\t\t\treturn getSearchedBmcServerList({\n\t\t\t\tuserId: userId,\n\t\t\t\tjoin: selectedJoin,\n\t\t\t\tvendor: selectedVendor,\n\t\t\t\tboaName: selectedBoaGroup,\n\t\t\t\tpage: isRefresh ? 1 : page\n\t\t\t}).then((data) => {\n\t\t\t\tsetList(data.bmc)\n\t\t\t\tif (isRefresh) {\n\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\t// 초기화\n\tconst reloadData = async () => {\n\t\ttry {\n\t\t\tsetResetCheckbox(!resetCheckbox)\n\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\tconst selectId = (id) => {\n\t\tsetSelectedIds([...selectedIds, id]);\n\t};\n\n\tconst unselectId = (id) => {\n\t\tsetSelectedIds(selectedIds.filter((number) => number !== id));\n\t};\n\n\tconst selectAll = () => {\n\t\tconst allIds = list.map((item) => item.number);\n\t\tsetSelectedIds([...selectedIds, ...allIds]);\n\t};\n\n\tconst unselectAll = () => {\n\t\tsetSelectedIds([]);\n\t};\n\n\t//등록요청 클릭\n\tconst onClickRegister = () => {\n\t\tsetAddBmcVisible(true)\n\t};\n\n\t//Bmc 서버 삭제 요청\n\tconst onClickDelete = async () => {\n\t\tif (selectedIds.length > 0) {\n\t\t\tdispatch({\n\t\t\t\ttype: \"modal\",\n\t\t\t\tshowConfirmModal: {\n\t\t\t\t\tisShow: true,\n\t\t\t\t\ttitle: \"BMC서버 삭제 확인\",\n\t\t\t\t\tmsg: `${selectedIds.length}개의 BMC 서버를 삭제하시겠습니까?`,\n\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\tdeleteBmcServer({ bmcUUID: selectedIds }).then((response) => {\n\t\t\t\t\t\t\tif (response) {\n\t\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"삭제 완료\", msg: \"BMC서버 삭제를 완료하였습니다.\" } });\n\t\t\t\t\t\t\t\treloadData()\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"삭제에 실패하였습니다.\" } });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: \"modal\",\n\t\t\t\tshowAlertModal: {\n\t\t\t\t\tisShow: true,\n\t\t\t\t\ttitle: \"BMC서버 삭제 확인\",\n\t\t\t\t\tmsg: \"삭제할 서버를 선택해 주세요\"\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CRow className=\"d-flex justify-content-center align-item-center\">\n\t\t\t\t<CCard className=\"d-flex mb-3\">\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t<CCardTitle style={{ fontWeight: \"bold\" }}>BMC 서버 관리</CCardTitle>\n\t\t\t\t\t\t\t{/* {list && <CCardText>(총 {totalCount}건)</CCardText>} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<CRow className=\"justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(joinSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => {\n\t\t\t\t\t\t\t\t\tsetSelectedJoin(value)\n\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(vendorSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedVendor(value)} />\n\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\toptions={SetSelectBoxOptions(boaGroupSelectBoxOption, \"전체\")}\n\t\t\t\t\t\t\t\tcallBack={(value) => setSelectedBoaGroup(value)} />\n\t\t\t\t\t\t\t<CCol>\n\t\t\t\t\t\t\t\t<ButtonPrimary\n\t\t\t\t\t\t\t\t\ttext=\"검색\"\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tif (selectedJoin === 0 && selectedVendor === 0 && selectedBoaGroup === 0) {\n\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t<CCol className=\"d-flex justify-content-between\">\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<ButtonOutLine text=\"등록요청\" onClick={onClickRegister} />\n\t\t\t\t\t\t\t\t\t<ButtonOutLine text=\"삭제\" onClick={onClickDelete} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\toptions={SetSelectBoxPageOptions(totalPage)}\n\t\t\t\t\t\t\t\t\t\treload={selectBoxReload}\n\t\t\t\t\t\t\t\t\t\tcallBack={(pageValue) => {\n\t\t\t\t\t\t\t\t\t\t\tif (selectedJoin === 0 && selectedVendor === 0 && selectedBoaGroup === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: false, page: pageValue });\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tgetSearchedList({ isRefresh: false, page: pageValue })\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t\t<BmcServerList\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tselectId={selectId}\n\t\t\t\t\t\tunselectId={unselectId}\n\t\t\t\t\t\tselectAll={selectAll}\n\t\t\t\t\t\tunselectAll={unselectAll}\n\t\t\t\t\t\tresetCheckbox={resetCheckbox}\n\t\t\t\t\t/>\n\t\t\t\t\t<AddBmcServerModal\n\t\t\t\t\t\tvisible={addBmcVisible}\n\t\t\t\t\t\tsetVisible={setAddBmcVisible}\n\t\t\t\t\t\tvendorOptions={vendorSelectBoxOption}\n\t\t\t\t\t\tboaGroupOptions={boaGroupSelectBoxOption}\n\t\t\t\t\t\tcallBack={reloadData}\n\t\t\t\t\t/>\n\t\t\t\t</CCard>\n\t\t\t</CRow>\n\t\t</>\n\t);\n};\n\nexport default BmcServerMain;\n","import { CCol, CForm, CFormInput, CFormLabel, CModal, CModalBody, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport { useEffect, useState } from \"react\";\nimport TitleContentTemplate from \"../../components/text/TitleContentTemplate\";\nimport { getBmcInventoryCatalogDetail } from \"../../apis/maintenance/Maintenance\";\nimport { useDispatch } from \"react-redux\";\n\nconst InventoryCatalogDetailModal = (props) => {\n\tconst { bmcUUID, visible, setVisible } = props;\n\tconst dispatch = useDispatch();\n\tconst [data, setData] = useState();\n\n\tuseEffect(() => {\n\t\tif (visible) {\n\t\t\t// todo : bmcUUID로 검색했을떄 정상적인 데이터가 나오지 않음 추후 교체\n\t\t\t// getBmcInventoryCatalogDetail({ bmcUUID: bmcUUID })\n\t\t\tgetBmcInventoryCatalogDetail({ bmcUUID: \"UUID_1\" })\n\t\t\t\t.then(async (response) => {\n\t\t\t\t\tif (response.inventory_detail.length === 0) {\n\t\t\t\t\t\tsetVisible(false)\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"상세 데이터가 없습니다.\" } });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetData(response.inventory_detail[0])\n\t\t\t\t\t}\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"InventoryCatalogDetail Error\", msg: \"InventoryCatalogDetail에 문제가 있습니다. 확인해주세요\" } });\n\t\t\t\t});\n\t\t}\n\t}, [visible])\n\n\treturn (\n\t\tdata ?\n\t\t\t< CModal\n\t\t\t\tsize=\"xl\"\n\t\t\t\talignment=\"center\"\n\t\t\t\tvisible={visible}\n\t\t\t\tonClose={() => { setVisible(false) }}\n\t\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t\t<CModalHeader>\n\t\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">BMC Inventory Catalog Detail</CModalTitle>\n\t\t\t\t</CModalHeader>\n\t\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t\t<CForm>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"System ID\" value={bmcUUID} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Serial Number\" value={data.serial_num} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Firmware Version\" value={data.firmware_version} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Model\" value={data.model} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BIOS Version\" value={data.bios_version} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BMC MAC Address\" value={data.mac_address} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"BIOS Build Time\" value={data.bios_build_time} />\n\t\t\t\t\t\t\t<TitleContentTemplate title=\"Power State\" value={data.power_status} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CForm>\n\t\t\t\t</CModalBody>\n\n\t\t\t</CModal > : <></>\n\t)\n}\n\n\nexport default InventoryCatalogDetailModal;"],"names":["getBmcInventoryCatalogList","async","userId","page","props","api","get","headers","apiHeader","data","error","console","getSearchedBmcInventoryCatalogList","vendor","boa","getBmcInventoryCatalogDetail","bmcUUID","updatePowerControlSet","powerOption","bmcIp","bodyParams","log","updateFanControlSet","fanOption","_ref","list","selectId","unselectId","selectAll","unselectAll","resetCheckbox","items","setItems","useState","headCheckStates","setHeadCheckStates","checkboxStates","setCheckboxStates","visible","setVisible","selectedItem","setSelectedItem","useEffect","forEach","item","Object","keys","length","allChecked","values","every","value","transformedData","map","check","bmc_UUID","bmcName","bmc_name","boaName","boa_name","bmc_ip","version","joinState","join_state","joinDate","join_date","_cellProps","class","scope","columns","key","label","_props","_jsxs","_Fragment","children","CTable","align","responsive","bordered","hover","_jsx","CTableHead","color","CTableRow","column","CTableHeaderCell","CFormCheck","checked","onChange","e","isChecked","target","CTableBody","CTableDataCell","type","id","handleCheckboxChange","prevState","Link","onClick","showDetailPopup","InventoryCatalogDetailModal","vendorOptions","boaGroupOptions","callBack","dispatch","useDispatch","setBmcName","bmcIP","setBmcIP","bmcUser","setBmcUser","bmcPassword","setBmcPassword","selectedVendor","setSelectedVendor","selectedBoaGroup","setSelectedBoaGroup","Cookies","clearAndClose","CModal","size","alignment","onClose","labelledby","CModalHeader","CModalTitle","CModalBody","className","CForm","CRow","InputTitleTemplate","title","setOnChange","CCol","sm","CFormLabel","SelectBox","options","SetSelectBoxOptions","CModalFooter","ButtonPrimary","text","registerBmcServer","boaGroup","then","response","showAlertModal","isShow","msg","catch","ButtonSecondary","BmcServerMain","cookies","useCookies","selectedIds","setSelectedIds","setList","totalPage","setTotalPage","selectBoxReload","setSelectBoxReload","joinSelectBoxOption","setJoinSelectBoxOption","vendorSelectBoxOption","setVendorSelectBoxOption","boaGroupSelectBoxOption","setBoaGroupSelectBoxOption","selectedJoin","setSelectedJoin","setResetCheckbox","addBmcVisible","setAddBmcVisible","initList","getBmcServerList","bmc","pages","getList","isRefresh","getSearchedList","_ref2","getSearchedBmcServerList","join","reloadData","CCard","CCardBody","CCardTitle","style","fontWeight","xs","cols","ButtonOutLine","onClickRegister","showConfirmModal","onConfirm","deleteBmcServer","SetSelectBoxPageOptions","reload","pageValue","BmcServerList","filter","number","allIds","AddBmcServerModal","setData","inventory_detail","TitleContentTemplate","serial_num","firmware_version","model","bios_version","mac_address","bios_build_time","power_status"],"sourceRoot":""}