{"version":3,"file":"static/js/323.20263103.chunk.js","mappings":"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","sources":["views/bmcDevices/boaGroup/AddBoaGroupModal.js","views/bmcDevices/boaGroup/BoaGroupList.js","views/bmcDevices/boaGroup/BoaGroupMain.js"],"sourcesContent":["import { CCol, CForm, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CRow } from \"@coreui/react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport InputTitleTemplate from \"../../../components/text/InputTitleTemplate\";\nimport { registerBoaGroup } from \"../../../apis/bmcDevice/BmcDeviceApi\";\nimport { Cookies } from \"react-cookie\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\nimport ButtonSecondary from \"../../../components/buttons/ButtonSecondary\";\n\nconst AddBoaGroupModal\n\t= (props) => {\n\t\tconst { visible, setVisible, vendorOptions, boaGroupOptions, callBack } = props;\n\t\tconst dispatch = useDispatch();\n\n\t\tconst [boaName, setBoaName] = useState();\n\t\tconst [hostIp, setHostIp] = useState();\n\t\tconst [hostPort, setHostPort] = useState();\n\t\tconst [hostUser, setHostUser] = useState();\n\t\tconst [hostPassword, setHostPassword] = useState(0);\n\t\tconst [description, setDescription] = useState(0);\n\n\t\tconst cookies = new Cookies()\n\t\tvar userId = `${cookies.get(\"userId\")}`\n\n\t\tconst registerRequest = () => {\n\t\t\tconst isVaild = [boaName, hostIp, hostPort, hostUser, hostPassword, description].every(item => item)\n\t\t\tif (isVaild) {\n\t\t\t\tregisterBoaGroup({\n\t\t\t\t\tuserId: userId,\n\t\t\t\t\tboaName: boaName,\n\t\t\t\t\thostIp: hostIp,\n\t\t\t\t\thostPort: hostPort,\n\t\t\t\t\thostUser: hostUser,\n\t\t\t\t\thostPassword, hostPassword,\n\t\t\t\t\tdescription: description,\n\t\t\t\t}).then(async (response) => {\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"그룹 등록 완료\", msg: \"BOA그룹 등록을 완료하였습니다.\" } });\n\t\t\t\t\t\tcallBack()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"그룹 등록에 실패하였습니다.\" } });\n\t\t\t\t\t}\n\t\t\t\t\tsetVisible(false)\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 에러\", msg: \"BOA그룹 등록에 문제가 있습니다. 확인해주세요\" } });\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"항목을 모두 작성해 주세요\" } });\n\t\t\t}\n\t\t\t// todo : 생성 테스트 해봐야함\n\t\t}\n\n\t\tconst clearAndClose = () => {\n\t\t\tsetBoaName(\"\")\n\t\t\tsetHostIp(\"\")\n\t\t\tsetHostPort(\"\")\n\t\t\tsetHostUser(\"\")\n\t\t\tsetHostPassword(\"\")\n\t\t\tsetDescription(\"\")\n\t\t\tsetVisible(false)\n\t\t}\n\n\t\treturn (\n\n\t\t\t< CModal\n\t\t\t\tsize=\"lg\"\n\t\t\t\talignment=\"center\"\n\t\t\t\tvisible={visible}\n\t\t\t\tonClose={() => { clearAndClose() }}\n\t\t\t\tlabelledby=\"VerticallyCenteredExample\">\n\t\t\t\t<CModalHeader>\n\t\t\t\t\t<CModalTitle id=\"VerticallyCenteredExample\">BOA 그룹 등록</CModalTitle>\n\t\t\t\t</CModalHeader>\n\t\t\t\t<CModalBody className=\"text-center m-3\">\n\t\t\t\t\t<CForm>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BOA Name\" setOnChange={setBoaName} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BOA Host IP\" setOnChange={setHostIp} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BOA Host Port\" setOnChange={setHostPort} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BOA Host User\" setOnChange={setHostUser} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"BOA Host PW\" setOnChange={setHostPassword} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow className=\"mb-3\">\n\t\t\t\t\t\t\t<InputTitleTemplate title=\"Description\" setOnChange={setDescription} />\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CForm>\n\t\t\t\t</CModalBody>\n\t\t\t\t<CModalFooter>\n\t\t\t\t\t<div className=\"d-flex col-6 mx-auto\">\n\t\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t\t<ButtonPrimary text=\"등록 요청\" onClick={() => { registerRequest() }} />\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t<CCol className=\"me-2 col-6\">\n\t\t\t\t\t\t\t<ButtonSecondary text=\"취소\" onClick={() => { clearAndClose() }} />\n\t\t\t\t\t\t</CCol>\n\t\t\t\t\t</div>\n\t\t\t\t</CModalFooter>\n\t\t\t</CModal >\n\t\t)\n\t}\n\n\nexport default AddBoaGroupModal\n\t;","import React, { useState, useEffect } from \"react\";\nimport {\n\tCFormCheck,\n\tCTable,\n\tCTableBody,\n\tCTableDataCell,\n\tCTableHead,\n\tCTableHeaderCell,\n\tCTableRow,\n} from \"@coreui/react\";\n\nconst BoaGroupList = ({\n\tlist,\n\tselectId,\n\tunselectId,\n\tselectAll,\n\tunselectAll,\n\tresetCheckbox,\n}) => {\n\tconst [items, setItems] = useState();\n\tconst [headCheckStates, setHeadCheckStates] = useState(false);\n\tconst [checkboxStates, setCheckboxStates] = useState({});\n\n\tconst handleCheckboxChange = (id, isChecked) => {\n\t\tsetCheckboxStates((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[id]: isChecked,\n\t\t}));\n\t};\n\n\tuseEffect(() => {\n\t\tsetHeadCheckStates(false)\n\t\tif (items) {\n\t\t\titems.forEach((item) => {\n\t\t\t\tcheckboxStates[item.boaId] = false;\n\t\t\t});\n\t\t}\n\t\tunselectAll();\n\t}, [resetCheckbox])\n\n\n\tuseEffect(() => {\n\t\t// checkboxStates가 초기 상태({})인 경우 실행하지 않음\n\t\tif (Object.keys(checkboxStates).length === 0) return;\n\n\t\t// 모든 id가 true인지 확인\n\t\tconst allChecked = Object.values(checkboxStates).every((value) => value);\n\n\t\tif (allChecked) {\n\t\t\t// 모든 id가 true일 때 실행할 코드\n\t\t\tsetHeadCheckStates(true);\n\t\t} else {\n\t\t\tsetHeadCheckStates(false);\n\t\t}\n\t}, [checkboxStates]); // checkboxStates가 변경될 때마다 useEffect 실행\n\n\tuseEffect(() => {\n\t\tif (list) {\n\t\t\tconst transformedData = list.map((item) => ({\n\t\t\t\tcheck: \"\",\n\t\t\t\tboaId: item.boa_id,\n\t\t\t\tboaName: item.boa_name,\n\t\t\t\tcreatedDate: item.created_date,\n\t\t\t\tdescription: item.description,\n\t\t\t\t_cellProps: { class: { scope: \"row\" } },\n\t\t\t}));\n\t\t\tsetItems(transformedData);\n\t\t}\n\t}, [list]);\n\n\n\n\tconst columns = [\n\t\t{ key: \"check\", label: \"선택\", _props: { scope: \"col\" } },\n\t\t{ key: \"boaId\", label: \"그룹ID\", _props: { scope: \"col\" } },\n\t\t{ key: \"boaName\", label: \"그룹명\", _props: { scope: \"col\" } },\n\t\t{ key: \"createdDate\", label: \"등록일\", _props: { scope: \"col\" } },\n\t\t{ key: \"description\", label: \"Description\", _props: { scope: \"col\" } },\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<CTable align=\"middle\" responsive bordered={true} hover={true}>\n\t\t\t\t<CTableHead align=\"middle\" color=\"primary\">\n\t\t\t\t\t<CTableRow>\n\t\t\t\t\t\t{columns?.map((column, key) => (\n\t\t\t\t\t\t\t<CTableHeaderCell key={key}>\n\t\t\t\t\t\t\t\t{column.label == \"선택\" ? (\n\t\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\t\tchecked={headCheckStates || false}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\t\tsetHeadCheckStates(isChecked);\n\t\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.boaId] = true;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tselectAll();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\titems.forEach((item) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxStates[item.boaId] = false;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\tunselectAll();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t&nbsp; {column.label}\n\t\t\t\t\t\t\t</CTableHeaderCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</CTableRow>\n\t\t\t\t</CTableHead>\n\n\t\t\t\t<CTableBody align=\"middle\">\n\t\t\t\t\t{items?.map((item, key) => (\n\t\t\t\t\t\t<CTableRow key={key}>\n\t\t\t\t\t\t\t<CTableDataCell>\n\t\t\t\t\t\t\t\t<CFormCheck\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tid={`gridCheck-${item.boaId}`}\n\t\t\t\t\t\t\t\t\tchecked={checkboxStates[item.boaId] || false}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tconst isChecked = e.target.checked;\n\t\t\t\t\t\t\t\t\t\thandleCheckboxChange(item.boaId, isChecked);\n\t\t\t\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\t\t\t\tselectId(item.boaId);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tunselectId(item.boaId);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.boaId}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.boaName}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.createdDate}</CTableDataCell>\n\t\t\t\t\t\t\t<CTableDataCell>{item.description}</CTableDataCell>\n\t\t\t\t\t\t</CTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</CTableBody>\n\t\t\t</CTable>\n\n\t\t</>\n\t);\n};\n\nexport default BoaGroupList;\n","import React, { useState, useEffect } from \"react\";\nimport { CCard, CCardBody, CCol, CRow, CCardTitle } from \"@coreui/react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { deleteBoaGroup, getBoaGroupList } from \"../../../apis/bmcDevice/BmcDeviceApi\";\nimport { useCookies } from \"react-cookie\";\nimport SelectBox from \"../../../components/selectBox/SelectBox\";\nimport ButtonOutLine from \"../../../components/buttons/ButtonOutline\";\nimport { SetSelectBoxPageOptions } from \"../../../utils/Utilities\";\nimport { useDispatch } from \"react-redux\";\nimport ButtonPrimary from \"../../../components/buttons/ButtonPrimary\";\nimport AddBoaGroupModal from \"./AddBoaGroupModal\";\nimport BoaGroupList from \"./BoaGroupList\";\n\nconst BoaGroupMain = () => {\n\tconst [cookies] = useCookies([\"userId\"]);\n\tvar userId = `${cookies.userId}`\n\tconst dispatch = useDispatch();\n\n\t// 조회 관련 변수\n\tconst [selectedIds, setSelectedIds] = useState([]);\n\tconst [list, setList] = useState();\n\tconst [totalPage, setTotalPage] = useState();\n\n\t// 페이지네이션\n\tconst [selectBoxReload, setSelectBoxReload] = useState(false);\n\n\t//그리스 셀렉션 초기화\n\tconst [resetCheckbox, setResetCheckbox] = useState(false);\n\n\t//등록요청 팝업\n\tconst [addBoaVisible, setAddBoaVisible] = useState(false);\n\n\tuseEffect(() => {\n\t\tgetList({ isRefresh: true, page: 1 });\n\t}, []);\n\n\tconst getList = ({ isRefresh, page }) => {\n\n\t\ttry {\n\t\t\treturn getBoaGroupList({ userId: userId, page: page })\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetList(data.boa)\n\t\t\t\t\tif (isRefresh) {\n\t\t\t\t\t\tsetTotalPage(data.pages)\n\t\t\t\t\t\tsetSelectBoxReload(!selectBoxReload)\n\t\t\t\t\t}\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t}\n\n\t// 초기화\n\tconst reloadData = async () => {\n\t\ttry {\n\t\t\tsetResetCheckbox(!resetCheckbox)\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching data:\", error);\n\t\t}\n\t};\n\n\tconst selectId = (id) => {\n\t\tsetSelectedIds([...selectedIds, id]);\n\t};\n\n\tconst unselectId = (id) => {\n\t\tsetSelectedIds(selectedIds.filter((number) => number !== id));\n\t};\n\n\tconst selectAll = () => {\n\t\tconst allIds = list.map((item) => item.number);\n\t\tsetSelectedIds([...selectedIds, ...allIds]);\n\t};\n\n\tconst unselectAll = () => {\n\t\tsetSelectedIds([]);\n\t};\n\n\t//등록요청 클릭\n\tconst onClickRegister = () => {\n\t\tsetAddBoaVisible(true)\n\t};\n\n\t//BOA그룹 삭제 요청\n\tconst onClickDelete = async () => {\n\t\tif (selectedIds.length > 0) {\n\t\t\tdispatch({\n\t\t\t\ttype: \"modal\",\n\t\t\t\tshowConfirmModal: {\n\t\t\t\t\tisShow: true,\n\t\t\t\t\ttitle: \"BOA그룹 삭제 확인\",\n\t\t\t\t\tmsg: `${selectedIds.length}개의 BOA 그룹을 삭제하시겠습니까?`,\n\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\tdeleteBoaGroup({ boaId: selectedIds }).then((response) => {\n\t\t\t\t\t\t\tif (response) {\n\t\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"삭제 완료\", msg: \"BOA그룹 삭제를 완료하였습니다.\" } });\n\t\t\t\t\t\t\t\treloadData()\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdispatch({ type: \"modal\", showAlertModal: { isShow: true, title: \"⚠️ 알림\", msg: \"삭제에 실패하였습니다.\" } });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: \"modal\",\n\t\t\t\tshowAlertModal: {\n\t\t\t\t\tisShow: true,\n\t\t\t\t\ttitle: \"BOA그룹 삭제 확인\",\n\t\t\t\t\tmsg: \"삭제할 서버를 선택해 주세요\"\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CRow className=\"d-flex justify-content-center align-item-center\">\n\t\t\t\t<CCard className=\"d-flex mb-3\">\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t<CCardTitle style={{ fontWeight: \"bold\" }}>BOA 그룹 관리</CCardTitle>\n\t\t\t\t\t\t\t{/* {list && <CCardText>(총 {totalCount}건)</CCardText>} */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<CRow className=\"justify-content-end mb-4\" xs={{ cols: 'auto' }}>\n\t\t\t\t\t\t\t<CCol>\n\t\t\t\t\t\t\t\t<ButtonPrimary\n\t\t\t\t\t\t\t\t\ttext=\"검색\"\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: true, page: 1 });\n\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t\t<CRow>\n\t\t\t\t\t\t\t<CCol className=\"d-flex justify-content-between\">\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<ButtonOutLine text=\"등록\" onClick={onClickRegister} />\n\t\t\t\t\t\t\t\t\t<ButtonOutLine text=\"삭제\" onClick={onClickDelete} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t<SelectBox\n\t\t\t\t\t\t\t\t\t\toptions={SetSelectBoxPageOptions(totalPage)}\n\t\t\t\t\t\t\t\t\t\treload={selectBoxReload}\n\t\t\t\t\t\t\t\t\t\tcallBack={(pageValue) => {\n\t\t\t\t\t\t\t\t\t\t\tgetList({ isRefresh: false, page: pageValue });\n\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CCol>\n\t\t\t\t\t\t</CRow>\n\t\t\t\t\t</CCardBody>\n\t\t\t\t\t<BoaGroupList\n\t\t\t\t\t\tlist={list}\n\t\t\t\t\t\tselectId={selectId}\n\t\t\t\t\t\tunselectId={unselectId}\n\t\t\t\t\t\tselectAll={selectAll}\n\t\t\t\t\t\tunselectAll={unselectAll}\n\t\t\t\t\t\tresetCheckbox={resetCheckbox}\n\t\t\t\t\t/>\n\t\t\t\t\t<AddBoaGroupModal\n\t\t\t\t\t\tvisible={addBoaVisible}\n\t\t\t\t\t\tsetVisible={setAddBoaVisible}\n\t\t\t\t\t\tcallBack={reloadData}\n\t\t\t\t\t/>\n\t\t\t\t</CCard>\n\t\t\t</CRow>\n\t\t</>\n\t);\n};\n\nexport default BoaGroupMain;\n"],"names":["props","visible","setVisible","vendorOptions","boaGroupOptions","callBack","dispatch","useDispatch","boaName","setBoaName","useState","hostIp","setHostIp","hostPort","setHostPort","hostUser","setHostUser","hostPassword","setHostPassword","description","setDescription","userId","Cookies","get","clearAndClose","_jsxs","CModal","size","alignment","onClose","labelledby","children","_jsx","CModalHeader","CModalTitle","id","CModalBody","className","CForm","CRow","InputTitleTemplate","title","setOnChange","CModalFooter","CCol","ButtonPrimary","text","onClick","every","item","registerBoaGroup","then","async","response","type","showAlertModal","isShow","msg","catch","error","ButtonSecondary","_ref","list","selectId","unselectId","selectAll","unselectAll","resetCheckbox","items","setItems","headCheckStates","setHeadCheckStates","checkboxStates","setCheckboxStates","useEffect","forEach","boaId","Object","keys","length","allChecked","values","value","transformedData","map","check","boa_id","boa_name","createdDate","created_date","_cellProps","class","scope","columns","key","label","_props","_Fragment","CTable","align","responsive","bordered","hover","CTableHead","color","CTableRow","column","CTableHeaderCell","CFormCheck","checked","onChange","e","isChecked","target","CTableBody","CTableDataCell","handleCheckboxChange","prevState","BoaGroupMain","cookies","useCookies","selectedIds","setSelectedIds","setList","totalPage","setTotalPage","selectBoxReload","setSelectBoxReload","setResetCheckbox","addBoaVisible","setAddBoaVisible","getList","isRefresh","page","getBoaGroupList","data","boa","pages","console","log","reloadData","CCard","CCardBody","CCardTitle","style","fontWeight","xs","cols","ButtonOutLine","onClickRegister","showConfirmModal","onConfirm","deleteBoaGroup","SelectBox","options","SetSelectBoxPageOptions","reload","pageValue","BoaGroupList","filter","number","allIds","AddBoaGroupModal"],"sourceRoot":""}